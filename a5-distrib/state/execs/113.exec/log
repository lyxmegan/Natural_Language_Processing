main() {
  Execution directory: /Users/Megan/Desktop/NLP/p2-distrib/state/execs/113.exec
  DataManager.loadExamples {
    Reading general {
      Path: evaluator/domains/dbquery/geoquery/1/geoquery.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/geoquery.dlog
        89 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/predicates.dlog
        49 statements
        Parsing evaluator/domains/dbquery/geoquery/1/geobase.dlog [2.1s, cum. 3.3s]
        698 statements
      } [7.3s, cum. 7.3s]
      Path: evaluator/domains/dbquery/geoquery/1/lexicon.dlog {
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon.dlog
        5 statements
        Parsing evaluator/domains/dbquery/geoquery/1/../../general/lexicon.dlog
        31 statements
        Parsing evaluator/domains/dbquery/geoquery/1/lexicon0.dlog
        5 statements
      }
      Path: /var/folders/rx/x3y13w4n2c3gsgtdwx6mqf5w0000gn/T/tmpgr210hsl.dlog {
        Parsing /var/folders/rx/x3y13w4n2c3gsgtdwx6mqf5w0000gn/T/tmpgr210hsl.dlog {
          DatalogParser.loadSafe(): start
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,largest(A,state(A)))).
          _parse([query], answer(A,smallest(B,(state(A),smallest(B,state(B)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,highest(A,highest(A,place(A),highest(A,place(A),highest(A,place(A),highest(A,place(A),highest(A,place(A))))))))).
          _parse([query], answer(A,(major(A),river(A),loc(A,B),const(B,stateid(ohio))))).
          _parse([query], answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(dallas))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,B))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(usa)))))).
          _parse([query], answer(A,(state(A),traverse(A,B,(B,,(traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,,))))))))))))))).
          _parse([query], answer(A,lowest(A,(place(A,B),const(B,stateid()))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(maryland))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid())))).
          _parse([query], answer(A,(city(A),traverse(A,B),const(B,((B),traverse(B,,traverse(B,,traverse(B,,traverse(B,,(B),traverse(B,,traverse(B,,(B),traverse()))))))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,((B,(mississippi(B),traverse(C,B),riverid(mississippi)),traverse(C,B))))).
          _parse([query], answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))).
          _parse([query], answer(A,largest(B,(state(A,A),population(A,A),population(A,A)))))A)A,population(A,A))))A)A,population(A,A))))A)A,population(A).
          _parse([query], answer(A,(state(A),next_to(B,A),const(B,stateid(mississippi))))).
          _parse([query], answer(A,capital(A),capital(A),loc(A,B),const(B,stateid()))).
          _parse([query], answercountcountcountcountcountA,count(B,count(B,count(C,count(C,D,count(D,(city(D),loc(D,E),const(E,countryid(usa),countryidusausa)),C)),C)))).
          _parse([query], answer(A,largest(A,largest(A,(city(A),loc(A,B),largest(B,largest(B,largest(B,)))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))))).
          _parse([query], answer(A,(loc(B,A),capital(B),loc(B,A),capital(B),loc(B,A)))).
          _parse([query], answer(A,largest(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,count(B,(state(B),loc(B,C),const(C,stateid(usa))),A))).
          _parse([query], answer(A,(state(A),((B,(state(A),area(B,,(B,,(B,((B,,(B,,(B,()))))))))))))).
          _parse([query], answer(A,((A,(river(A),traverse(A,B),A),longest(B,C),const(C,stateid((C),traverse(C,B),traverse(C,B),traverse(C,B),traverse(C,))))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B),state(A),population(A,B))))))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,longest(A,(river(A),loc(A,B),const(B,C),const(C,stateid(C)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,most(B,(major(A,(city(A),city(A,B),city(A),city(B),city(B),city(B),city(B),city(B)))))))))).
          _parse([query], answer(A,count(B,count(B,C),const(C,stateid(colorado))),A))).
          _parse([query], answer(A,highest(A,highest(A,(place(A),loc(A,B),highest(B,countryid(usa))))))).
          _parse([query], answer(A,largest(B,(largest(C,largest(C,(loc(D,,largest(D,,loc(D,,loc(D,,loc(D,,loc(D,,loc(D,,loc(D,,loc(D,,loc(D))))))))))))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(missouri))))).
          _parse([query], answer(A,most(B,(traverse(A,B,(river(A,B),traverse(B,A),traverse(B,A),traverse(B,A),traverse(B,A),traverse(B,A),traverse(B,A),traverse)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),highest(B,place(B),loc(B,C),highest(C,place(C))))))).
          _parse([query], answer(A,largest(B,largest(largest(B,capital(B)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid())))).
          _parse([query], answer(A,(state(A),next_to(B,,((B,C),const(C,,const(D,,const(D,riverid(ohio))),traverse(D,C))))))).
          _parse([query], answer(A,highest(B,(state(A),place(A,place(A),place(B)))))).
          _parse([query], answer(A,largest(B,((C,(B),traverse(B,B),B),B),B),const(B,riverid(B),traverse(B,B),B))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(alaska)))))).
          _parse([query], answer(A,most(A,(city(@,(city(@),city(@,A),city(A),city(@,A),city(A),city(A),city(A),city(A),city(A),city(A))))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,A))))).
          _parse([query], answer(A,highest(B,highest((C,((B,highest(,(B,highest(,(place(B,highest(,(place(B,C),highest(C,place((B,C),highest(C,place((B,highest(())))))))))))))))))))).
          _parse([query], answer(A,most(A,(state(,(state(,(state(,(((,,(((,,(((,(((,(((,,(((,(((@,,,((,(((,(((@,)))))))))))))))))))))))))))))))))))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))).
          _parse([query], answer(A,count(B,(major(B),loc(B,C),const(C,countryid(usa))),A))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(illinois))))).
          _parse([query], answer(A,most(A,B,most(B,C,most(C,most(C,most(B,C),state(C),state(C),traverse(B,C),state(C),state(C),state(C))))))).
          _parse([query], answer(A,most(B,most(state(next_to(next_to,most(next_to,most(next_to,most(next_to,C,most(next_to,state(next_to(B,D,most(next_to,most(next_to,most(next_to,most(next_to,most(next_to,most(next_to,)))))))))))))))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(colorado)),river(B)))).
          _parse([query], answer(A,longest(B,(state(A),loc(B,A),river(B),loc(B,A),river(B,river(B))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(largest(C,(state(B),largest(B,capital(B),largest(B,capital(C),largest(B,capital(C),largest(D,(largest(C,capital(D),largest(E,(largest)))))))))))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,,)))).
          _parse([query], answer(A,most(A,B,(state(B),most(B,C,(state(B,C),state(C,(state(B,C),,(C,(state(C),,(C,,(C,(state(B,C)))))))))))))).
          _parse([query], answer(A,largest(B,largest(B,(city(B,loc(B,C),largest(C,largest(C,loc(C,D),largest(D,largest(D,countryid(usa))))))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(montana))))).
          _parse([query], answer(A,(river(A),traverse(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,most(A,most(,(traverse(@,A,(state(@),traverse(@,A),most(traverse(@,A),most(traverse(@,A),most(A,mosttraverse(@,A),most(A,most))))))))))).
          _parse([query], answer(A,(state(B,(state(A),population(C,,((D,((E,,((F,,((G,,((H,(((G,,((I,((H,I),population(J,,()))))))))))))))))))))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),traverse(A,B),traverse(B),traverse(A,B),traverse(B,A),traverse(B),traverse(A,B),traverse(B))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,highest(B,(place(A),place(A,place(A),place(A,place(A),place(A,place(A),place(B)))))))).
          _parse([query], answer(A,(state(A),const(B,cityid(austin,_)),loc(B,A)))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),highest(C,B),highest(C,place(C))))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))).
          _parse([query], answer(A,count(B,count(C,(colorado(colorado)),river(C),B)),A))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(mississippi))))).
          _parse([query], answer(A,most(A,B,(state(A),river(A,B),river(B),traverse(B,A),river(B))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(austin,_))))).
          _parse([query], answer(A,largest(B,((C,(city(B),loc(D,C),largest(E,(city(D),loc(D,F),largest(,((E),loc(E,G),const(,,)),largest()))))))))).
          _parse([query], answer(A,(state(A),loc(B,A),river(B),))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(florida))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,largest(B,(largest(C,(capital(B),population(B,C))))largest(C,,population(B,C))))).
          _parse([query], answer(A,most(B,(major(A),major(major(A),major(major(A),major(major(A),major(major(A),major(major(A),major(A,B),major(B),traverse(B,A)))))))))).
          _parse([query], answer(A,(((@,A),capital(A),loc(@,A),capital(A),capital(A),loc(@,A),capital(A),capital(A),loc(@,A),capital(A),)))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))).
          _parse([query], answer(A,lowest(A,place(A),place(A),loc(A,place(A)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(next_to))),next_to(C,D),const(D,stateid(next_to)))))).
          _parse([query], answer(A,(state(A),traverse(A,B),state(B),traverse(B,C),state(C),traverse(C,D),state(D),traverse(D,E),state(E),traverse(E,F),state))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,count(B,(state(B),\+(next_to(B,C),const(C,stateid(tennessee))),A)),A)),A)),A)),A)),A)),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,C),const(C,D),const(D,,next_to(D,E),const(E,,next_to(E,F),const(F,,next_to(F,G))))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))).
          _parse([query], answer(A,largest(B,largest((A,(A,A),population(A,A),population(A,A),population(A,A),population(A,A),population(A,A),population(A,A),population(A,A)))))).
          _parse([query], answer(A,(len(B,A(B,(river(B),traverse(B,C),const(C,D),const(D,(river(D),traverse(D,E),const(E,(river(E),traverse(E,F))))))))))).
          _parse([query], answer(A,(elevation(B,A),placeid(B,placeid("guadalupe"))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,))))))))))))))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(california))))).
          _parse([query], answer(A,largest(A,largest(A,largest(A,largest(A,)))))).
          _parse([query], answer(A,(capital(A),loc(A,B),capital(B),capital(B),loc(B,A)))).
          _parse([query], answer(Alargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargest(largest(largest,largest(largestlargestlargestlargest(B,largest(largestlargestlargestlargest(C,largestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargest)))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(montana)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(california)))))).
          _parse([query], answer(A,(major(A),city(A),city(A),loc(A,B),const(B,stateid(major))))).
          _parse([query], answer(A,sum(B,A),sum(B))).
          _parse([query], answer(A,lowest(A,(place(A,(place(A),loc(A,B),const(B,stateid(nebraska)))))))).
          _parse([query], answer(A,smallest(A,state(A)))).
          _parse([query], answer(A,count(B,(river(B),loc(B,C),const(C,stateid(iowa))),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),state(B),california(B),))).
          _parse([query], answer(A,largest(B,largest(largest,largest(@,largest(@,largest(@,largest(@,largest(@,largest(@,largest(@,largest(@,largest(@,largest(@,largest(@,largest(@,largest(@,largest()))))))))))))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,place(B),loc(B,C),const(C,place(C))))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(place)))))).
          _parse([query], answer(A,(population(B,A),state(B),const(C,riverid(mississippi)),traverse(C,B)),traverse(C,B)),traverse(C,B)),traverse(C,B)))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))).
          _parse([query], answer(A,smallest(B,(state(A),population(A,B))))smallestsmallestsmallest,smallest(C,smallest(D,smallest(C,smallest(C,D)),smallest(C,smallest(C,D))))smallestsmallestsmallest,smallest()).
          _parse([query], answer(A,largest(A,(loc(@),loc(A,B),loc(B,loc(B,loc(B,loc(B,loc(B,loc(B,loc(B,loc(B,loc(B,loc(B,loc(B,loc))))))))))))))).
          _parse([query], answer(A,largest(A,(state(@),next_to(@,A),const(A,stateid(hawaii)))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(michigan)))))).
          _parse([query], answer(A,largest(B,(state(A),density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,))))))))))))))))).
          _parse([query], answer(A,largest(B,(state(C,,largest(D,(state(D),next_to(E,,largest(E,,next_to(E,F),largest(F,,next_to(F,G),largest(G,,next_to(G,H),largest))))))))))).
          _parse([query], answer(A,(state(A),next_to(next_to(@,B),const(B,stateid()))))).
          _parse([query], answer(A,highest(A,(place(A,(place(A),loc(A,B),const(B,countryid(usa)))))))).
          _parse([query], answer(A,(population(B,A),const(B,countryid(usa))))).
          _parse([query], answer(A,(major(B,,(major(A),next_to(B,C),const(C,stateid(texas)),A),A),A),A),A),A),A),A),A),A),A),).
          _parse([query], answer(A,lowest(A,(place(A,loc(A,loc(A,locloc(A,locloc(A,locloc(A,locloc(A,locloc(A,locloc(A,locloc(A,locloc(A,locloc(A,)))))))))))))))).
          _parse([query], answer(A,largest(B,(C,(B,(B,(B,(B,D,(C,(C,(C,E),largest(D,(D),density(D,D),density(D,density(D,density(D,density())))))))))))))).
          _parse([query], answer(A,(city(A),loc(B,A),city(B),city(B),city(B),city(B))))).
          _parse([query], answer(A,most(B,(population(C,B),most(B,D,(state(C,E,(D,E),state(D),population(D,F,(E),population(E,G,(F),population(F,H)))))))))).
          _parse([query], answer(A,largest(B,largest(C,(state(D,,largest(E,,largest(F,,largest(G,,largest(H,,largest(I,,largest(J,,largest(K,,largest(L,,largest(M,,largest(N)))))))))))))))).
          _parse([query], answer(A,largest(B,(state(A),largest(C,largest(D,largest(E,largest(F,largest(G,largest(H,largest(I,largest(J,largest(K,largest(L,largest(M,largest(N,largest(O,))))))))))))))))).
          _parse([query], answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))).
          _parse([query], answer(A,(river(A,B),const(B,C),const(C,D),const(D,stateid(usa))),river(D),loc(D,C)))).
          _parse([query], answer(A,(len(B,A),const(B,riverid())))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(colorado)),river(B,A)))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(usa))))).
          _parse([query], answer(A,smallestsmallest(smallest(@,smallest(B,smallest(smallest(A,smallest(A,smallest(A,smallest(A,smallest(A,smallest(A,smallest(A,smallest(A,smallest(A,smallest(A,smallest(A,smallest(A,smallest)))))))))))))))))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,,loc(B,A))))).
          _parse([query], answer(A,(state(A,B),((B,place(B),loc(C,B),lowest(C,place(C))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),smallest(B,capital(B))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(washington))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(iowa)),A)),A))).
          _parse([query], answer(A,(state(A),loc(B,A),city(B),const(B,cityid(austin,_)))))).
          _parse([query], answer(A,most(,most(,(river(A,,river(A,,river(A,,river(A,,river(river(river(river(river(river(river(river(river(river(river(river(river(river(river(@),river()))))))))))))))))))))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid(maine))))).
          _parse([query], answer(A,(traverse(B,A),most(B,C,(river(B,B),traverse(C,B),traverse(C,B),traverse(C,B),traverse(C,B),traverse(C,B),traverse(C,B)))))).
          _parse([query], answer(A,(capital(A),city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))).
          _parse([query], answer(A,largest(B,largest(C,(state(B),largest(D,largest(E,largest(F,largest(G,largest(H,largest(I,largest(J,largest(K,largest(L,largest(M,largest(N,largest(O,))))))))))))))))).
          _parse([query], answer(A,(((B,((B),traverse(B,C),const(C,riverid(texas)))),traverse(C,,traverse(C,,traverse(C,,traverse(C,,traverse(C,,traverse(C,,traverse(C))))))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("new mexico"))))).
          _parse([query], answer(A,(river(A),B),const(B,C),const(C,stateid(texas))),,))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,riverid(missouri))))).
          _parse([query], answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))).
          _parse([query], answer(A,(elevation(B,A),const(B,placeid("mount mckinley"))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(delaware)))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))).
          _parse([query], answer(A,((A,((A,B),(B,C),const(C,riverid(colorado))),traverse(C,B))),traverse(C,B)))).
          _parse([query], answer(A,(major(A),river(A),traverse(A,@)))).
          _parse([query], answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(louisiana)))))).
          _parse([query], answer(A,largest(B,((,(A,(A),loc(A,C),largest(B,(B),loc(B,D),const(D,countryid(usa))))))))).
          _parse([query], answer(A,longest(A,((A,((A),loc(A,B),const(B,stateid((B,))))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(dallas))))).
          _parse([query], answer(A,largest(largest(largest(,largest((,largest((,largest(,largest((,largest((,largest((,largest((,largest((,largest((,largest((,largest((,largest((,loc(A,loc(A,)))))))))))))))))))))))))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(alaska))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(place)))))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(pennsylvania))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))).
          _parse([query], answer(A,largest(B,largest(B,largest(B,largest(B,largest(B,largest(B,)))))))).
          _parse([query], answer(A,(state(A),loc(A,B),const(B,stateid("new hampshire"))))).
          _parse([query], answer(A,most(B,most(B,C,(state(B),next_to(B,C),state(B),traverse(B,C),state(B),next_to(B,C),state(B),state(B),state(B),))))).
          _parse([query], answer(A,(((A),city(A),loc(B,(place(B),loc(B,place(B),place(B),place(B,place(B),place(B,place(B)))))(B,place(B))))))).
          _parse([query], answer(A,(B,(const(C,B),const(C,stateid(texas)),population(B,B)),A))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,highest(A,highest(A,(mountain(A,loc(A,B),const(B,countryid(usa)))))))).
          _parse([query], answer(A,((B,((C,(B),highest(D,(C),highest(E,(D),highest(F,(E),highest(G,(F),highest(H,(G),highest(G,,((G,,)))))))))))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(houston,_))))).
          _parse([query], answer(A,highest(A,highest(A,(place(A),loc(A,loc(A,loc(A,loc(A,loc(A,loc(A,loc(A,loc(A,loc(A,loc(A,loc(A,loc(A,))))))))))))))))).
          _parse([query], answer(A,(state(A),traverse(A,B),river(B,C),traverse(C,B)))).
          _parse([query], answer(A,highest(B,(place(B,C),highest(C,(place(C),loc(C,D),highest(D,place(D),loc(D,E),highest(E,place(E))))))))).
          _parse([query], answer(A,largest(B,largest(population(A,population(A,B))))population(A,B))))population(A,population(A,population(A,population(A,population(A,population(A,population(A,population(A,population()))))))).
          _parse([query], answer(A,(density(B,A),const(B,stateid())))).
          _parse([query], answer(A,(B,("( C , B ) , _const ( C , D ) , _const ( D , _cityid (",_)))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid())))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid()))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid(ohio)),river(B)))).
          _parse([query], answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,stateid(california))))))).
          _parse([query], answer(A,smallest(B,(state(A),area(A,B)))))).
          _parse([query], answer(A,(river(A),\+(traverse(A),\+(traverse(A,B),const(B,stateid(texas))))))))).
          _parse([query], answer(A,most(B,most(,(A,,most(B,,most(B,A),traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,,traverse(B,)))))))))))))).
          _parse([query], answer(A,lowest(A,(place(A,(place(A),loc(A,B),const(B,countryid(usa)))))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid("new york"))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(A,(state(A,B),const(B,stateid(texas)))))).
          _parse([query], answer(A,largest(A,(city(A,loc(A,B),const(B,stateid())))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(dallas,_))))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(mississippi)))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(riverside,_))))).
          _parse([query], answer(A,(river(A),\+(traverse(A,B),\+(B),\+(traverse(B,C),const(C,\+(traverse(C),\+(traverse(C,D),const(D,\+(traverse(D))))))))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))).
          _parse([query], answer(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest(A,largest()))))))))))))))))).
          _parse([query], answer(A,smallest(B,(state(A),density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,density(A,))))))))))))))))).
          _parse([query], answer(A,(capital(A),loc(B,(loc(B,A),capital(B,place(B))))))).
          _parse([query], answer(A,(len(B,(len(B,(len(B,(river(B),loc(B,C),const(C,countryid(usa))))))))))).
          _parse([query], answer(A,count(B,(state(B),next_to(B,C),const(C,stateid(iowa))),A))A))A))).
          _parse([query], answer(A,highest(A,(place(A),loc(A,B),highest(B,C),highest(C,(place(C),next_to(C,D),const(D,stateid(D)))))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid())))).
          _parse([query], answer(A,most(A,B,(state(A),traverse(A,B),state(A),traverse(A,B),traverse(A,B)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid())))).
          _parse([query], answer(A,most(A,((,((,(A,((,(,(A,((,(,(,(A,((,(,(,(A,(,(,(,(,(,(A,(,(,(,(,)))))))))))))))))))))))))))))))).
          _parse([query], answer(A,(state(A),traverse(A,(traverse(A,,traverse(A,(traverse(A,,traverse(A,(traverse(A,,traverse(A,(traverse(A,,traverse(A,(traverse(A,,traverse(A,(traverse)))))))))))))))))))).
          _parse([query], answer(A,count(B,(state(B),loc(C,,const(C,countryid(usa)),A(B,C)),A)))).
          _parse([query], largestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargestlargest).
          _parse([query], answer(A,((B,(B,(place(B),loc(B,C),const(C,stateid(wyoming)))))))).
          _parse([query], answer(A,highest(A,highest(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(texas))),@))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(major))))).
          _parse([query], answer(A,most(A,B,(state(A,B,(state(A),next_to(A,B),state(B,state(B)))))))))).
          _parse([query], answer(A,(river(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,largest(B,(state(A),population(A,B))))).
          _parse([query], answer(A,largest(B,largest(C,largest(C,largest(C,state(C))))))).
          _parse([query], answer(A,most(A,B,(river(A),traverse(A,B),traverse(A,B),traverse(A,B),traverse(A,A))traverse(A,B))traverse(A,B))traverse(A,B))traverse).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(rochester,_)),loc(B,cityid(rochester,_)),loc(A,cityid(A,_))))).
          _parse([query], answer(A,most(A,B,(state(A),traverse(A,B),traverse(A,B),traverse(A,B),traverse(B,A)))))).
          _parse([query], answer(A,(major(A),((A),((A),traverse(A,B),const(B,((B),traverse(B,,((B),traverse(B,,((B),traverse(B,,((B),))))))))))))).
          _parse([query], answer(A,highest(A,(place(A,B),highest(B,(place(B),loc(B,C),const(C,stateid(texas)))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(illinois))))).
          _parse([query], answercountcountA,count(B,count(B,stateid(tennessee)),@)),@))).
          _parse([query], answer(A,(population(B,A),const(B,stateid("rhode island"))))).
          _parse([query], answer(A,(population(B,A),const(B,cityid(boulder,_))))).
          _parse([query], answer(A,(city(A),loc(A,B),const(B,stateid(texas))))).
          _parse([query], answer(A,most(A,(river(@,(river(@,(traverse(@,A),most(A,(river(@,A),traverse(A,A),most(A,(river(@,A),traverse(A,A),traverse())))))))))))).
          _parse([query], answer(A,(state(B,(state(C,(state(B),area(C,,(C,C))))))))))))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))).
          _parse([query], answer(A,largest(A,largest(A,state(A))))).
          _parse([query], answer(A,(len(B,A),const(B,riverid())))).
          _parse([query], answer(A,largest(B,largest(C,largest(largest,largest(D,largest(largest,largest(E,largest(largest,largest(F,largest(largest,largest(G,largest(largest,largest(H,largest(largest,largest(I,largest(largest,largest()))))))))))))))))).
          _parse([query], answer(A,(capital(A),loc(A,B),const(B,stateid())))).
          _parse([query], answer(A,(river(A),traverse(A,B),river(B),traverse(B,C),const(C,stateid(C))))).
          _parse([query], answer(A,(major(A),city(A),city(A),loc(A,B),const(B,stateid(B))))).
          _parse([query], answer(A,((A((A),loc(A,B),largest(B,(river(B),loc(B,A),capital(B),loc(B,A))))(B,()))(B,()))(B))).
          _parse([query], answer(A,most(B,(state(A),river(A,B),river(B),traverse(B,A),river(B)))))))).
          _parse([query], answer(A,(population(B,A),capital(B),loc(B,C),loc(C,B),capital))).
          _parse([query], answer(A,(B,(C,(B,B),B),B),B),B),B),B),B),const(B,B),const(B,B),const(B,stateid().
          _parse([query], answer==,==,,=,,loc(loc,loc=,loc=,loc=,loc=,loc=,loc=,loc=,loc=,loc=,loc=,loc=,loc=,loc=,loc=,,loc=,,loc=,,)).
          _parse([query], answer(A,(population(B,A),const(B,cityid(mississippi))))).
          _parse([query], answer(A,largest(B,largest(B,largest((B,largest(C,largest(C,largest(C,largest(C,largest(C,largest(C,largest(C,largest(C,largest(C,largest(C,largest(C,largest(C,largest)))))))))))))))))).
          _parse([query], answer(A,(city(A),loc(B,A),city(B),city(B),city(B),loc(C,B),city(C),city(C),city(C),loc(D,C),city(D),))).
          _parse([query], answer(A,smallest(B,smallest(C,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest(B,smallest()))))))))))))))))).
          _parse([query], answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(montana))))))).
          _parse([query], answer(A,((A,((A,B),const(B,riverid(mississippi)),traverse(B,A)))))).
          _parse([query], answer(A,(area(B,A),state(B)))).
          _parse([query], answer(A,(major(A),city(A),loc(A,B),const(B,stateid(major))))).
          _parse([query], answer(A,largest(A,largest(A,largest(A,largest(A,largest(A,countryid(usa)))))))).
          _parse([query], answer(A,(loc(B,A),const(B,cityid(houston,_))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid())))).
          _parse([query], answer(A,count(B,(usa(B,,loc(B,C),const(C,countryid(usa)),A)),A))).
          _parse([query], answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))).
          _parse([query], answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(arkansas)))))).
          _parse([query], answer(A,largest(B,(population(A,B),state(A),population(A,A))))).
          _parse([query], answer(A,(population(B,A),const(B,stateid(mississippi))))).
          _parse([query], answer(A,most(A,B,(state(A),state(A,B),state(A),state(A),state(A),state(A),state(A))))))))).
          _parse([query], answer(A,largest(B,(city(A),density(A,B),density(A,B)))))).
          _parse([query], answer(A,(area(B,A),const(B,stateid(wisconsin))))).
          _parse([query], answer(A,(size(B,A),const(B,stateid(texas))),@))).
          _parse([query], answer(A,smallest(B,(state(B),population(B,A))))).
          _parse([query], answer(A,largest(B,(((B,(),largest(C,(((D,(),largest(E,(),largest(F,(((G,(),largest(H,(),largest(I,(),largest(J,())))))))))))))))))).
          DatalogParser.loadSafe(): end
        } [4.7s, cum. 4.7s]
        560 statements
        Example tmpgr210hsl.dlog:0: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:1: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:2: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:3: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:4: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:5: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:6: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:7: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:8: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:9: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:10: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:11: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:12: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:13: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:14: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:15: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:16: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:17: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:18: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:19: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:20: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:21: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:22: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:23: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:24: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:25: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:26: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:27: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:28: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:29: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:30: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:31: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:32: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:33: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:34: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:35: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:36: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:37: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:38: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:39: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:40: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:41: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:42: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:43: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:44: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:45: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:46: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:47: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:48: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:49: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:50: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:51: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:52: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:53: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:54: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:55: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:56: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:57: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:58: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:59: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:60: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:61: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:62: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:63: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:64: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:65: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:66: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:67: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:68: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:69: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:70: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:71: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:72: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:73: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:74: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:75: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:76: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:77: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:78: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:79: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:80: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:81: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:82: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:83: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:84: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:85: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:86: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:87: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:88: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:89: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:90: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:91: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:92: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:93: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:94: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:95: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:96: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:97: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:98: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:99: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:100: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:101: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:102: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:103: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:104: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:105: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:106: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:107: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:108: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:109: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:110: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:111: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:112: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:113: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:114: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:115: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:116: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:117: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:118: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:119: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:120: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:121: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:122: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:123: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:124: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:125: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:126: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:127: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:128: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:129: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:130: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:131: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:132: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:133: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:134: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:135: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:136: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:137: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:138: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:139: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:140: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:141: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:142: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:143: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:144: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:145: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:146: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:147: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:148: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:149: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:150: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:151: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:152: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:153: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:154: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:155: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:156: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:157: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:158: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:159: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:160: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:161: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:162: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:163: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:164: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:165: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:166: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:167: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:168: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:169: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:170: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:171: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:172: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:173: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:174: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:175: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:176: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:177: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:178: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:179: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:180: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:181: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:182: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:183: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:184: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:185: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:186: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:187: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:188: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:189: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:190: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:191: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:192: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:193: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:194: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:195: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:196: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:197: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:198: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:199: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:200: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:201: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:202: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:203: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:204: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:205: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:206: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:207: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:208: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:209: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:210: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:211: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:212: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:213: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:214: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:215: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:216: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:217: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:218: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:219: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:220: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:221: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:222: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:223: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:224: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:225: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:226: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:227: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:228: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:229: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:230: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:231: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:232: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:233: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:234: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:235: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:236: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:237: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:238: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:239: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:240: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:241: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:242: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:243: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:244: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:245: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:246: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:247: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:248: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:249: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:250: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:251: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:252: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:253: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:254: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:255: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:256: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:257: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:258: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:259: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:260: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:261: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:262: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:263: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:264: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:265: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:266: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:267: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:268: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:269: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:270: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:271: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:272: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:273: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:274: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:275: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:276: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:277: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:278: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:279: query => {[alaska:stateid/2]} | answer(A,largest(A,state(A)))
        Example tmpgr210hsl.dlog:280: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,smallest(B,(state(A),smallest(B,state(B)))))
        Example tmpgr210hsl.dlog:281: query => {[missouri:riverid/2]} | answer(A,longest(A,(river(A),loc(A,B),const(B,countryid(usa)))))
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:283: query => {} | answer(A,(major(A),river(A),loc(A,B),const(B,stateid(ohio))))
        Example tmpgr210hsl.dlog:284: query => {} | answer(A,(major(A),lake(A),loc(A,B),const(B,stateid(colorado))))
        Example tmpgr210hsl.dlog:285: query => {} | answer(A,(population(B,A),const(B,stateid(dallas))))
        Example tmpgr210hsl.dlog:286: query => {[alaska:stateid/2]} | answer(A,smallest(B,(state(A),density(A,B))))
        Example tmpgr210hsl.dlog:287: query => {} | answer(A,smallest(A,(city(A),loc(A,B),const(B,stateid(usa)))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:289: query => {[4217000count]} | answer(A,(population(B,A),const(B,stateid(maryland))))
        Example tmpgr210hsl.dlog:290: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:292: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:293: query => {[kentucky:stateid/2],[indiana:stateid/2],[pennsylvania:stateid/2],[illinois:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),const(B,riverid(ohio)),river(B),traverse(B,A)))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:294: query => {[arkansas:stateid/2],[louisiana:stateid/2],[tennessee:stateid/2],[alabama:stateid/2]} | answer(A,(state(A),next_to(B,A),const(B,stateid(mississippi))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:297: query => {[14229000count]} | answer(A,(population(B,A),const(B,stateid(texas))))
        Example tmpgr210hsl.dlog:298: query => {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[usa:countryid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]} | answer(A,(loc(B,A),capital(B),loc(B,A),capital(B),loc(B,A)))
        Example tmpgr210hsl.dlog:299: query => {[wichita_ks:cityid/3]} | answer(A,largest(A,largest(A,(city(A),loc(A,B),const(B,stateid(kansas))))))
        Example tmpgr210hsl.dlog:300: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpgr210hsl.dlog:301: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example tmpgr210hsl.dlog:302: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example tmpgr210hsl.dlog:303: query => {[Join failed syntactically: {}:{[placeid/2],[lakeid/2],[cityid/3],[mountainid/2],[riverid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,count(B,(state(B),loc(B,C),const(C,stateid(usa))),A))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:304: query => {[los angeles_ca:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(california)))))
        Example tmpgr210hsl.dlog:305: query => {[Join failed syntactically: {[missouri:riverid/2,north dakota:stateid/2,north dakota:stateid/2],[hudson:riverid/2,usa:countryid/2,usa:countryid/2],[powder:riverid/2,usa:countryid/2,usa:countryid/2],[tombigbee:riverid/2,usa:countryid/2,usa:countryid/2],[white:riverid/2,arkansas:stateid/2,arkansas:stateid/2],[republican:riverid/2,colorado:stateid/2,colorado:stateid/2],[delaware:riverid/2,delaware:stateid/2,delaware:stateid/2],[red:riverid/2,usa:countryid/2,usa:countryid/2],[powder:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[tennessee:riverid/2,usa:countryid/2,usa:countryid/2],[snake:riverid/2,idaho:stateid/2,idaho:stateid/2],[smoky hill:riverid/2,usa:countryid/2,usa:countryid/2],[green:riverid/2,usa:countryid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2,usa:countryid/2],[roanoke:riverid/2,usa:countryid/2,usa:countryid/2],[san juan:riverid/2,utah:stateid/2,utah:stateid/2],[neosho:riverid/2,usa:countryid/2,usa:countryid/2],[connecticut:riverid/2,usa:countryid/2,usa:countryid/2],[mississippi:riverid/2,kentucky:stateid/2,kentucky:stateid/2],[cheyenne:riverid/2,usa:countryid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2,usa:countryid/2],[snake:riverid/2,oregon:stateid/2,oregon:stateid/2],[mississippi:riverid/2,tennessee:stateid/2,tennessee:stateid/2],[mississippi:riverid/2,minnesota:stateid/2,minnesota:stateid/2],[mississippi:riverid/2,iowa:stateid/2,iowa:stateid/2],[clark fork:riverid/2,usa:countryid/2,usa:countryid/2],[south platte:riverid/2,usa:countryid/2,usa:countryid/2],[connecticut:riverid/2,new hampshire:stateid/2,new hampshire:stateid/2],[hudson:riverid/2,new jersey:stateid/2,new jersey:stateid/2],[san juan:riverid/2,colorado:stateid/2,colorado:stateid/2],[arkansas:riverid/2,arkansas:stateid/2,arkansas:stateid/2],[tennessee:riverid/2,tennessee:stateid/2,tennessee:stateid/2],[bighorn:riverid/2,montana:stateid/2,montana:stateid/2],[dakota:riverid/2,usa:countryid/2,usa:countryid/2],[green:riverid/2,colorado:stateid/2,colorado:stateid/2],[tombigbee:riverid/2,alabama:stateid/2,alabama:stateid/2],[tennessee:riverid/2,kentucky:stateid/2,kentucky:stateid/2],[potomac:riverid/2,district of columbia:stateid/2,district of columbia:stateid/2],[snake:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2,massachusetts:stateid/2],[smoky hill:riverid/2,colorado:stateid/2,colorado:stateid/2],[pecos:riverid/2,usa:countryid/2,usa:countryid/2],[rio grande:riverid/2,new mexico:stateid/2,new mexico:stateid/2],[rock:riverid/2,wisconsin:stateid/2,wisconsin:stateid/2],[connecticut:riverid/2,connecticut:stateid/2,connecticut:stateid/2],[colorado:riverid/2,california:stateid/2,california:stateid/2],[little missouri:riverid/2,montana:stateid/2,montana:stateid/2],[washita:riverid/2,texas:stateid/2,texas:stateid/2],[gila:riverid/2,usa:countryid/2,usa:countryid/2],[roanoke:riverid/2,virginia:stateid/2,virginia:stateid/2],[mississippi:riverid/2,arkansas:stateid/2,arkansas:stateid/2],[san juan:riverid/2,usa:countryid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2,nebraska:stateid/2],[missouri:riverid/2,usa:countryid/2,usa:countryid/2],[south platte:riverid/2,colorado:stateid/2,colorado:stateid/2],[pecos:riverid/2,texas:stateid/2,texas:stateid/2],[colorado:riverid/2,colorado:stateid/2,colorado:stateid/2],[republican:riverid/2,nebraska:stateid/2,nebraska:stateid/2],[neosho:riverid/2,kansas:stateid/2,kansas:stateid/2],[cimarron:riverid/2,usa:countryid/2,usa:countryid/2],[little missouri:riverid/2,usa:countryid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2,north dakota:stateid/2],[chattahoochee:riverid/2,usa:countryid/2,usa:countryid/2],[st. francis:riverid/2,usa:countryid/2,usa:countryid/2],[ohio:riverid/2,illinois:stateid/2,illinois:stateid/2],[delaware:riverid/2,new jersey:stateid/2,new jersey:stateid/2],[ohio:riverid/2,kentucky:stateid/2,kentucky:stateid/2],[canadian:riverid/2,texas:stateid/2,texas:stateid/2],[dakota:riverid/2,south dakota:stateid/2,south dakota:stateid/2],[snake:riverid/2,usa:countryid/2,usa:countryid/2],[san juan:riverid/2,new mexico:stateid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2,virginia:stateid/2],[north platte:riverid/2,nebraska:stateid/2,nebraska:stateid/2],[republican:riverid/2,usa:countryid/2,usa:countryid/2],[pearl:riverid/2,louisiana:stateid/2,louisiana:stateid/2],[niobrara:riverid/2,usa:countryid/2,usa:countryid/2],[wateree catawba:riverid/2,south carolina:stateid/2,south carolina:stateid/2],[cimarron:riverid/2,kansas:stateid/2,kansas:stateid/2],[missouri:riverid/2,missouri:stateid/2,missouri:stateid/2],[mississippi:riverid/2,usa:countryid/2,usa:countryid/2],[red:riverid/2,texas:stateid/2,texas:stateid/2],[north platte:riverid/2,usa:countryid/2,usa:countryid/2],[potomac:riverid/2,maryland:stateid/2,maryland:stateid/2],[columbia:riverid/2,washington:stateid/2,washington:stateid/2],[snake:riverid/2,washington:stateid/2,washington:stateid/2],[columbia:riverid/2,oregon:stateid/2,oregon:stateid/2],[mississippi:riverid/2,wisconsin:stateid/2,wisconsin:stateid/2],[north platte:riverid/2,colorado:stateid/2,colorado:stateid/2],[gila:riverid/2,new mexico:stateid/2,new mexico:stateid/2],[ouachita:riverid/2,arkansas:stateid/2,arkansas:stateid/2],[red:riverid/2,oklahoma:stateid/2,oklahoma:stateid/2],[washita:riverid/2,usa:countryid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2,missouri:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2,pennsylvania:stateid/2],[pearl:riverid/2,michigan:stateid/2,michigan:stateid/2],[missouri:riverid/2,iowa:stateid/2,iowa:stateid/2],[ohio:riverid/2,indiana:stateid/2,indiana:stateid/2],[tennessee:riverid/2,alabama:stateid/2,alabama:stateid/2],[red:riverid/2,new mexico:stateid/2,new mexico:stateid/2],[hudson:riverid/2,new york:stateid/2,new york:stateid/2],[canadian:riverid/2,new mexico:stateid/2,new mexico:stateid/2],[republican:riverid/2,kansas:stateid/2,kansas:stateid/2],[cheyenne:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2,oklahoma:stateid/2],[south platte:riverid/2,nebraska:stateid/2,nebraska:stateid/2],[st. francis:riverid/2,arkansas:stateid/2,arkansas:stateid/2],[rock:riverid/2,illinois:stateid/2,illinois:stateid/2],[missouri:riverid/2,montana:stateid/2,montana:stateid/2],[allegheny:riverid/2,usa:countryid/2,usa:countryid/2],[ouachita:riverid/2,usa:countryid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2,usa:countryid/2],[niobrara:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[potomac:riverid/2,usa:countryid/2,usa:countryid/2],[little missouri:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[red:riverid/2,louisiana:stateid/2,louisiana:stateid/2],[wabash:riverid/2,indiana:stateid/2,indiana:stateid/2],[colorado:riverid/2,nevada:stateid/2,nevada:stateid/2],[arkansas:riverid/2,colorado:stateid/2,colorado:stateid/2],[clark fork:riverid/2,montana:stateid/2,montana:stateid/2],[ohio:riverid/2,ohio:stateid/2,ohio:stateid/2],[washita:riverid/2,oklahoma:stateid/2,oklahoma:stateid/2],[rio grande:riverid/2,texas:stateid/2,texas:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2,oklahoma:stateid/2],[gila:riverid/2,arizona:stateid/2,arizona:stateid/2],[yellowstone:riverid/2,usa:countryid/2,usa:countryid/2],[cumberland:riverid/2,kentucky:stateid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2,missouri:stateid/2],[potomac:riverid/2,west virginia:stateid/2,west virginia:stateid/2],[white:riverid/2,usa:countryid/2,usa:countryid/2],[green:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[smoky hill:riverid/2,kansas:stateid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2,south dakota:stateid/2],[pearl:riverid/2,usa:countryid/2,usa:countryid/2],[mississippi:riverid/2,illinois:stateid/2,illinois:stateid/2],[canadian:riverid/2,colorado:stateid/2,colorado:stateid/2],[niobrara:riverid/2,nebraska:stateid/2,nebraska:stateid/2],[yellowstone:riverid/2,north dakota:stateid/2,north dakota:stateid/2],[ohio:riverid/2,west virginia:stateid/2,west virginia:stateid/2],[rio grande:riverid/2,usa:countryid/2,usa:countryid/2],[delaware:riverid/2,usa:countryid/2,usa:countryid/2],[wateree catawba:riverid/2,north carolina:stateid/2,north carolina:stateid/2],[arkansas:riverid/2,usa:countryid/2,usa:countryid/2],[colorado:riverid/2,utah:stateid/2,utah:stateid/2],[neosho:riverid/2,oklahoma:stateid/2,oklahoma:stateid/2],[pecos:riverid/2,new mexico:stateid/2,new mexico:stateid/2],[chattahoochee:riverid/2,georgia:stateid/2,georgia:stateid/2],[yellowstone:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2,pennsylvania:stateid/2],[connecticut:riverid/2,vermont:stateid/2,vermont:stateid/2],[rock:riverid/2,usa:countryid/2,usa:countryid/2],[allegheny:riverid/2,new york:stateid/2,new york:stateid/2],[red:riverid/2,arkansas:stateid/2,arkansas:stateid/2],[bighorn:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[north platte:riverid/2,wyoming:stateid/2,wyoming:stateid/2],[mississippi:riverid/2,mississippi:stateid/2,mississippi:stateid/2],[columbia:riverid/2,usa:countryid/2,usa:countryid/2],[cimarron:riverid/2,new mexico:stateid/2,new mexico:stateid/2],[wabash:riverid/2,illinois:stateid/2,illinois:stateid/2],[wabash:riverid/2,usa:countryid/2,usa:countryid/2],[colorado:riverid/2,usa:countryid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2,colorado:stateid/2],[yellowstone:riverid/2,montana:stateid/2,montana:stateid/2],[green:riverid/2,utah:stateid/2,utah:stateid/2],[ouachita:riverid/2,louisiana:stateid/2,louisiana:stateid/2],[arkansas:riverid/2,kansas:stateid/2,kansas:stateid/2],[canadian:riverid/2,usa:countryid/2,usa:countryid/2],[white:riverid/2,missouri:stateid/2,missouri:stateid/2],[tombigbee:riverid/2,mississippi:stateid/2,mississippi:stateid/2],[delaware:riverid/2,new york:stateid/2,new york:stateid/2],[ohio:riverid/2,pennsylvania:stateid/2,pennsylvania:stateid/2],[cumberland:riverid/2,tennessee:stateid/2,tennessee:stateid/2],[clark fork:riverid/2,idaho:stateid/2,idaho:stateid/2],[mississippi:riverid/2,louisiana:stateid/2,louisiana:stateid/2],[little missouri:riverid/2,north dakota:stateid/2,north dakota:stateid/2],[cheyenne:riverid/2,north dakota:stateid/2,north dakota:stateid/2],[little missouri:riverid/2,south dakota:stateid/2,south dakota:stateid/2],[colorado:riverid/2,arizona:stateid/2,arizona:stateid/2],[wabash:riverid/2,ohio:stateid/2,ohio:stateid/2],[bighorn:riverid/2,usa:countryid/2,usa:countryid/2],[chattahoochee:riverid/2,florida:stateid/2,florida:stateid/2],[powder:riverid/2,montana:stateid/2,montana:stateid/2]}:{[riverid/2,stateid/2,stateid/2],[riverid/2,countryid/2,countryid/2]}[2] and {..}:{[date,stateid/2],[date_day,stateid/2],[time_duration,stateid/2],[count,stateid/2],[date_year,stateid/2],[rank,stateid/2],[date_month,stateid/2],[money/time_duration,stateid/2],[length,stateid/2],[frac,stateid/2],[date_time,stateid/2],[length^2,stateid/2],[name,stateid/2],[count/length^2,stateid/2],[money,stateid/2]}[0] => {}:error]} | answer(A,longest(A,(river(A),loc(A,B),const(B,C),const(C,stateid(C)))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:308: query => {[jefferson city_mo:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(missouri))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:311: query => {[montpelier_vt:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:314: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(alaska)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:315: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpgr210hsl.dlog:316: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example tmpgr210hsl.dlog:317: query => {[mississippi:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[texas:stateid/2],[tennessee:stateid/2],[oklahoma:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arkansas))))
        Example tmpgr210hsl.dlog:318: query => {[314count]} | answer(A,count(B,(major(B),loc(B,C),const(C,countryid(usa))),A))
        Example tmpgr210hsl.dlog:319: query => {[springfield_il:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(illinois))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:321: query => {[2333000length]} | answer(A,(len(B,A),const(B,riverid(colorado)),river(B)))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:322: query => {[virginia:stateid/2],[indiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[ohio:stateid/2],[west virginia:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(kentucky))))
        Example tmpgr210hsl.dlog:323: query => {[arizona:stateid/2],[nevada:stateid/2],[oregon:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(california))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:325: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example tmpgr210hsl.dlog:326: query => {[south dakota:stateid/2],[wyoming:stateid/2],[north dakota:stateid/2],[idaho:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(montana))))
        Example tmpgr210hsl.dlog:327: query => {[gila:riverid/2],[pecos:riverid/2],[cimarron:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),traverse(A,B),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:329: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:331: query => {[texas:stateid/2]} | answer(A,(state(A),const(B,cityid(austin,_)),loc(B,A)))
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:333: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi)),river(B)))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:334: query => {[3778000length]} | answer(A,(len(B,A),const(B,riverid(mississippi))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:335: query => {[345496count]} | answer(A,(population(B,A),const(B,cityid(austin,_))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:336: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpgr210hsl.dlog:337: query => {[1.78e+11length^2]} | answer(A,(area(B,A),const(B,stateid(florida))))
        Example tmpgr210hsl.dlog:338: query => {[sacramento_ca:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(california))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:340: query => {[montpelier_vt:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(vermont))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:341: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:342: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:343: query => {[oxnard_ca:cityid/3],[bristol township_pa:cityid/3],[santa barbara_ca:cityid/3],[buena park_ca:cityid/3],[fayetteville_nc:cityid/3],[orlando_fl:cityid/3],[san angelo_tx:cityid/3],[downey_ca:cityid/3],[greenville_sc:cityid/3],[concord_ca:cityid/3],[richardson_tx:cityid/3],[columbia_sc:cityid/3],[waukegan_il:cityid/3],[orange_ca:cityid/3],[pomona_ca:cityid/3],[lowell_ma:cityid/3],[charleston_sc:cityid/3],[largo_fl:cityid/3],[clearwater_fl:cityid/3],[bayonne_nj:cityid/3],[manchester_nh:cityid/3],[amarillo_tx:cityid/3],[vallejo_ca:cityid/3],[grand prairie_tx:cityid/3],[san bernardino_ca:cityid/3],[lakewood_oh:cityid/3],[bethesda_md:cityid/3],[evanston_il:cityid/3],[medford_ma:cityid/3],[san leandro_ca:cityid/3],[lakewood_co:cityid/3],[pueblo_co:cityid/3],[great falls_mt:cityid/3],[boise_id:cityid/3],[modesto_ca:cityid/3],[richmond_ca:cityid/3],[north charleston_sc:cityid/3],[westminster_ca:cityid/3],[mountain view_ca:cityid/3],[bellevue_wa:cityid/3],[reno_nv:cityid/3],[warwick_ri:cityid/3],[schenectady_ny:cityid/3],[sterling heights_mi:cityid/3],[peoria_il:cityid/3],[santa clara_ca:cityid/3],[bethlehem_pa:cityid/3],[utica_ny:cityid/3],[salem_or:cityid/3],[columbia_mo:cityid/3],[alexandria_va:cityid/3],[springfield_mo:cityid/3],[raleigh_nc:cityid/3],[winston-salem_nc:cityid/3],[portsmouth_va:cityid/3],[livonia_mi:cityid/3],[lawton_ok:cityid/3],[fargo_nd:cityid/3],[citrus heights_ca:cityid/3],[waterford_mi:cityid/3],[independence_mo:cityid/3],[silver spring_md:cityid/3],[waco_tx:cityid/3],[carson_ca:cityid/3],[bristol_ct:cityid/3],[glendale_ca:cityid/3],[wyoming_mi:cityid/3],[rochester_mn:cityid/3],[beaumont_tx:cityid/3],[oceanside_ca:cityid/3],[oak lawn_il:cityid/3],[east orange_nj:cityid/3],[scranton_pa:cityid/3],[westland_mi:cityid/3],[south gate_ca:cityid/3],[bloomington_mn:cityid/3],[royal oak_mi:cityid/3],[terre haute_in:cityid/3],[ogden_ut:cityid/3],[longview_tx:cityid/3],[anderson_in:cityid/3],[springfield_oh:cityid/3],[waterloo_ia:cityid/3],[troy_mi:cityid/3],[rockford_il:cityid/3],[somerville_ma:cityid/3],[lynn_ma:cityid/3],[quincy_ma:cityid/3],[cicero_il:cityid/3],[stockton_ca:cityid/3],[scotts valley_ca:cityid/3],[garden grove_ca:cityid/3],[east los angeles_ca:cityid/3],[huntington_wv:cityid/3],[norwalk_ct:cityid/3],[bridgeport_ct:cityid/3],[ontario_ca:cityid/3],[alhambra_ca:cityid/3],[lorain_oh:cityid/3],[penn hills_pa:cityid/3],[macon_ga:cityid/3],[costa mesa_ca:cityid/3],[irvine_ca:cityid/3],[billings_mt:cityid/3],[dearborn heights_mi:cityid/3],[wilmington_de:cityid/3],[hayward_ca:cityid/3],[irving_tx:cityid/3],[scottsdale_az:cityid/3],[cedar rapids_ia:cityid/3],[santa monica_ca:cityid/3],[kettering_oh:cityid/3],[santa rosa_ca:cityid/3],[gainesville_fl:cityid/3],[kendall_fl:cityid/3],[el cajon_ca:cityid/3],[west covina_ca:cityid/3],[arvada_co:cityid/3],[brownsville_tx:cityid/3],[sioux falls_sd:cityid/3],[kalamazoo_mi:cityid/3],[south bend_in:cityid/3],[clifton_nj:cityid/3],[chula vista_ca:cityid/3],[euclid_oh:cityid/3],[redondo beach_ca:cityid/3],[hartford_ct:cityid/3],[mesquite_tx:cityid/3],[clinton_mi:cityid/3],[burbank_ca:cityid/3],[farmington hills_mi:cityid/3],[middletown_nj:cityid/3],[pasadena_tx:cityid/3],[racine_wi:cityid/3],[youngstown_oh:cityid/3],[huntsville_al:cityid/3],[cheektowaga_ny:cityid/3],[framingham_ma:cityid/3],[monroe_la:cityid/3],[tallahassee_fl:cityid/3],[champaign_il:cityid/3],[tuscaloosa_al:cityid/3],[boulder_co:cityid/3],[berkeley_ca:cityid/3],[inglewood_ca:cityid/3],[woodbridge_nj:cityid/3],[reading_pa:cityid/3],[newport news_va:cityid/3],[wichita falls_tx:cityid/3],[fort smith_ar:cityid/3],[danbury_ct:cityid/3],[mount vernon_ny:cityid/3],[fort collins_co:cityid/3],[ann arbor_mi:cityid/3],[waltham_ma:cityid/3],[nashua_nh:cityid/3],[alameda_ca:cityid/3],[stamford_ct:cityid/3],[arlington heights_il:cityid/3],[san mateo_ca:cityid/3],[el monte_ca:cityid/3],[laredo_tx:cityid/3],[high point_nc:cityid/3],[dubuque_ia:cityid/3],[sunnyvale_ca:cityid/3],[charleston_wv:cityid/3],[fairfield_ca:cityid/3],[newport beach_ca:cityid/3],[dundalk_md:cityid/3],[meriden_ct:cityid/3],[west allis_wi:cityid/3],[lynchburg_va:cityid/3],[west hartford_ct:cityid/3],[southfield_mi:cityid/3],[paterson_nj:cityid/3],[altoona_pa:cityid/3],[lansing_mi:cityid/3],[hollywood_fl:cityid/3],[st. clair shores_mi:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[ventura_ca:cityid/3],[new bedford_ma:cityid/3],[tempe_az:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[pensacola_fl:cityid/3],[duluth_mn:cityid/3],[greenwich_ct:cityid/3],[skokie_il:cityid/3],[elyria_oh:cityid/3],[sioux city_ia:cityid/3],[bakersfield_ca:cityid/3],[niagara falls_ny:cityid/3],[thousand oaks_ca:cityid/3],[cranston_ri:cityid/3],[evansville_in:cityid/3],[trenton_nj:cityid/3],[redford_mi:cityid/3],[kenosha_wi:cityid/3],[durham_nc:cityid/3],[fremont_ca:cityid/3],[camden_nj:cityid/3],[miami beach_fl:cityid/3],[odessa_tx:cityid/3],[appleton_wi:cityid/3],[muncie_in:cityid/3],[overland park_ks:cityid/3],[green bay_wi:cityid/3],[topeka_ks:cityid/3],[edison_nj:cityid/3],[waterbury_ct:cityid/3],[hampton_va:cityid/3],[west valley_ut:cityid/3],[st. joseph_mo:cityid/3],[savannah_ga:cityid/3],[torrance_ca:cityid/3],[lakewood_ca:cityid/3],[casper_wy:cityid/3],[hammond_in:cityid/3],[irvington_nj:cityid/3],[abingdon_pa:cityid/3],[eugene_or:cityid/3],[joliet_il:cityid/3],[simi valley_ca:cityid/3],[west palm beach_fl:cityid/3],[dearborn_mi:cityid/3],[cherry hill_nj:cityid/3],[new haven_ct:cityid/3],[lawrence_ma:cityid/3],[chesapeake_va:cityid/3],[springfield_il:cityid/3],[erie_pa:cityid/3],[compton_ca:cityid/3],[levittown_ny:cityid/3],[aurora_il:cityid/3],[albany_ny:cityid/3],[elizabeth_nj:cityid/3],[pontiac_mi:cityid/3],[whittier_ca:cityid/3],[decatur_il:cityid/3],[pawtucket_ri:cityid/3],[koolaupoko_hi:cityid/3],[north little rock_ar:cityid/3],[lake charles_la:cityid/3],[fullerton_ca:cityid/3],[davenport_ia:cityid/3],[fall river_ma:cityid/3],[brockton_ma:cityid/3],[midland_tx:cityid/3],[new rochelle_ny:cityid/3],[lafayette_la:cityid/3],[parma_oh:cityid/3],[allentown_pa:cityid/3],[provo_ut:cityid/3],[upper darby_pa:cityid/3],[daly city_ca:cityid/3],[salinas_ca:cityid/3],[norwalk_ca:cityid/3],[roanoke_va:cityid/3],[pasadena_ca:cityid/3],[port arthur_tx:cityid/3],[newton_ma:cityid/3],[glendale_az:cityid/3],[tyler_tx:cityid/3],[new britain_ct:cityid/3],[escondido_ca:cityid/3],[elgin_il:cityid/3],[cambridge_ma:cityid/3],[lower merion_pa:cityid/3],[irondequoit_ny:cityid/3],[norman_ok:cityid/3],[portland_me:cityid/3],[taylor_mi:cityid/3],[albany_ga:cityid/3],[hamilton_oh:cityid/3],[saginaw_mi:cityid/3],[kenner_la:cityid/3],[canton_oh:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,countryid(usa))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:345: query => {[Join failed syntactically: {[guadalupe]}:{[length^2],[date_month],[frac],[length],[time_duration],[date_year],[date_day],[count],[date],[date_time],[rank],[name],[money],[count/length^2],[money/time_duration]}[0] and {[backbone mountain:placeid/2,1024length],[centerville:placeid/2,135length],[big stone lake:placeid/2,284length],[hunter:mountainid/2,4442length],[taum sauk mountain:placeid/2,540length],[belle fourche river:placeid/2,945length],[rainier:mountainid/2,4392length],[el diente:mountainid/2,4316length],[lincoln:mountainid/2,4354length],[crestone needle:mountainid/2,4327length],[foraker:mountainid/2,5304length],[mount whitney:placeid/2,4418length],[fairweather:mountainid/2,4663length],[mount katahdin:placeid/2,1606length],[beaver dam creek:placeid/2,610length],[east buttress:mountainid/2,4490length],[kit carson:mountainid/2,4317length],[torreys:mountainid/2,4349length],[long island sound:placeid/2,0length],[southeast corner:placeid/2,256length],[elbert:mountainid/2,4399length],[woodall mountain:placeid/2,246length],[mount rainier:placeid/2,4392length],[uncompahgre:mountainid/2,4361length],[antero:mountainid/2,4349length],[shavano:mountainid/2,4337length],[clingmans dome:placeid/2,2025length],[colorado river:placeid/2,143length],[white:mountainid/2,4342length],[sill:mountainid/2,4317length],[campbell hill:placeid/2,472length],[magazine mountain:placeid/2,839length],[tenleytown:placeid/2,125length],[eagle mountain:placeid/2,701length],[north palisade:mountainid/2,4341length],[high point:placeid/2,550length],[arkansas river:placeid/2,1021length],[evans:mountainid/2,4348length],[sanford:mountainid/2,4949length],[black mesa:placeid/2,1516length],[sassafras mountain:placeid/2,1085length],[yale:mountainid/2,4327length],[verdigris river:placeid/2,207length],[mount davidson:placeid/2,282length],[mount frissell:placeid/2,725length],[potomac river:placeid/2,0length],[wheeler peak:placeid/2,4011length],[bianca:mountainid/2,4372length],[whitney:mountainid/2,4418length],[ohio river:placeid/2,98length],[charles mound:placeid/2,376length],[castle:mountainid/2,4348length],[death valley:placeid/2,-85length],[mount washington:placeid/2,1917length],[potomac river:placeid/2,73length],[spruce knob:placeid/2,1482length],[mount davis:placeid/2,979length],[little river:placeid/2,87length],[mississippi river:placeid/2,78length],[quandary:mountainid/2,4348length],[st. elias:mountainid/2,5489length],[wrangell:mountainid/2,4317length],[mount rogers:placeid/2,1746length],[atlantic ocean:placeid/2,0length],[lake superior:placeid/2,183length],[brasstown bald:placeid/2,1458length],[bona:mountainid/2,5044length],[alverstone:mountainid/2,4439length],[ohio river:placeid/2,132length],[gannett peak:placeid/2,4202length],[mount hood:placeid/2,3424length],[longs:mountainid/2,4345length],[mississippi river:placeid/2,146length],[mount sunflower:placeid/2,1231length],[mississippi river:placeid/2,85length],[gulf of mexico:placeid/2,0length],[mckinley:mountainid/2,6194length],[black mountain:placeid/2,1263length],[franklin township:placeid/2,383length],[ocheyedan mound:placeid/2,511length],[granite peak:placeid/2,3901length],[driskill mountain:placeid/2,163length],[guadalupe peak:placeid/2,2667length],[mississippi river:placeid/2,55length],[timms hill:placeid/2,595length],[jerimoth hill:placeid/2,247length],[crestone:mountainid/2,4357length],[mauna kea:placeid/2,4205length],[shasta:mountainid/2,4317length],[lake erie:placeid/2,174length],[red river:placeid/2,229length],[williamson:mountainid/2,4382length],[kootenai river:placeid/2,549length],[bross:mountainid/2,4320length],[massive:mountainid/2,4396length],[mount mckinley:placeid/2,6194length],[princeton:mountainid/2,4327length],[grays:mountainid/2,4349length],[walton county:placeid/2,105length],[colorado river:placeid/2,21length],[borah peak:placeid/2,3859length],[johnson township:placeid/2,1654length],[mount mitchell:placeid/2,2037length],[blackburn:mountainid/2,4996length],[vancouver:mountainid/2,4785length],[wilson:mountainid/2,4342length],[white butte:placeid/2,1069length],[bear:mountainid/2,4520length],[cheaha mountain:placeid/2,734length],[kings peak:placeid/2,4123length],[mount marcy:placeid/2,1629length],[la plata:mountainid/2,4370length],[mount elbert:placeid/2,4399length],[red bluff reservoir:placeid/2,859length],[belford:mountainid/2,4327length],[humphreys peak:placeid/2,3851length],[new orleans:placeid/2,-1length],[hubbard:mountainid/2,4577length],[browne tower:mountainid/2,4429length],[harvard:mountainid/2,4395length],[maroon:mountainid/2,4315length],[delaware river:placeid/2,0length],[snake river:placeid/2,216length],[lake champlain:placeid/2,29length],[mount mansfield:placeid/2,1339length],[kennedy:mountainid/2,4964length],[mount greylock:placeid/2,1064length],[pacific ocean:placeid/2,0length],[st. francis river:placeid/2,70length],[mount curwood:placeid/2,604length],[lake michigan:placeid/2,177length],[boundary peak:placeid/2,4005length],[south buttress:mountainid/2,4842length],[ouachita river:placeid/2,17length],[churchill:mountainid/2,4766length],[harney peak:placeid/2,2207length]}:{[placeid/2,length],[mountainid/2,length]}[0] => {}:error]} | answer(A,(elevation(B,A),placeid(B,placeid('guadalupe'))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:346: query => {[colorado:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(california))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:347: query => {[Join failed syntactically: {[phoenix_az:cityid/3,arizona:stateid/2],[boston_ma:cityid/3,usa:countryid/2],[denver_co:cityid/3,colorado:stateid/2],[boise_id:cityid/3,usa:countryid/2],[tallahassee_fl:cityid/3,florida:stateid/2],[jackson_ms:cityid/3,usa:countryid/2],[concord_nh:cityid/3,usa:countryid/2],[juneau_ak:cityid/3,alaska:stateid/2],[charleston_wv:cityid/3,west virginia:stateid/2],[phoenix_az:cityid/3,usa:countryid/2],[lansing_mi:cityid/3,usa:countryid/2],[topeka_ks:cityid/3,usa:countryid/2],[lansing_mi:cityid/3,michigan:stateid/2],[columbus_oh:cityid/3,ohio:stateid/2],[richmond_va:cityid/3,virginia:stateid/2],[cheyenne_wy:cityid/3,wyoming:stateid/2],[austin_tx:cityid/3,texas:stateid/2],[salt lake city_ut:cityid/3,utah:stateid/2],[montpelier_vt:cityid/3,vermont:stateid/2],[olympia_wa:cityid/3,washington:stateid/2],[madison_wi:cityid/3,wisconsin:stateid/2],[des moines_ia:cityid/3,usa:countryid/2],[washington_dc:cityid/3,district of columbia:stateid/2],[bismarck_nd:cityid/3,usa:countryid/2],[honolulu_hi:cityid/3,hawaii:stateid/2],[concord_nh:cityid/3,new hampshire:stateid/2],[little rock_ar:cityid/3,arkansas:stateid/2],[montgomery_al:cityid/3,alabama:stateid/2],[austin_tx:cityid/3,usa:countryid/2],[trenton_nj:cityid/3,usa:countryid/2],[annapolis_md:cityid/3,maryland:stateid/2],[madison_wi:cityid/3,usa:countryid/2],[columbia_sc:cityid/3,south carolina:stateid/2],[santa fe_nm:cityid/3,new mexico:stateid/2],[providence_ri:cityid/3,usa:countryid/2],[atlanta_ga:cityid/3,georgia:stateid/2],[baton rouge_la:cityid/3,usa:countryid/2],[lincoln_ne:cityid/3,nebraska:stateid/2],[st. paul_mn:cityid/3,minnesota:stateid/2],[charleston_wv:cityid/3,usa:countryid/2],[pierre_sd:cityid/3,south dakota:stateid/2],[helena_mt:cityid/3,montana:stateid/2],[jackson_ms:cityid/3,mississippi:stateid/2],[dover_de:cityid/3,delaware:stateid/2],[dover_de:cityid/3,usa:countryid/2],[sacramento_ca:cityid/3,california:stateid/2],[juneau_ak:cityid/3,usa:countryid/2],[st. paul_mn:cityid/3,usa:countryid/2],[salt lake city_ut:cityid/3,usa:countryid/2],[montgomery_al:cityid/3,usa:countryid/2],[columbus_oh:cityid/3,usa:countryid/2],[indianapolis_in:cityid/3,usa:countryid/2],[little rock_ar:cityid/3,usa:countryid/2],[honolulu_hi:cityid/3,usa:countryid/2],[topeka_ks:cityid/3,kansas:stateid/2],[santa fe_nm:cityid/3,usa:countryid/2],[springfield_il:cityid/3,usa:countryid/2],[raleigh_nc:cityid/3,north carolina:stateid/2],[raleigh_nc:cityid/3,usa:countryid/2],[sacramento_ca:cityid/3,usa:countryid/2],[washington_dc:cityid/3,usa:countryid/2],[salem_or:cityid/3,oregon:stateid/2],[salem_or:cityid/3,usa:countryid/2],[baton rouge_la:cityid/3,louisiana:stateid/2],[boston_ma:cityid/3,massachusetts:stateid/2],[frankfort_ky:cityid/3,kentucky:stateid/2],[bismarck_nd:cityid/3,north dakota:stateid/2],[cheyenne_wy:cityid/3,usa:countryid/2],[harrisburg_pa:cityid/3,pennsylvania:stateid/2],[albany_ny:cityid/3,usa:countryid/2],[atlanta_ga:cityid/3,usa:countryid/2],[nashville_tn:cityid/3,usa:countryid/2],[augusta_me:cityid/3,maine:stateid/2],[trenton_nj:cityid/3,new jersey:stateid/2],[nashville_tn:cityid/3,tennessee:stateid/2],[tallahassee_fl:cityid/3,usa:countryid/2],[denver_co:cityid/3,usa:countryid/2],[carson city_nv:cityid/3,nevada:stateid/2],[hartford_ct:cityid/3,usa:countryid/2],[indianapolis_in:cityid/3,indiana:stateid/2],[jefferson city_mo:cityid/3,missouri:stateid/2],[boise_id:cityid/3,idaho:stateid/2],[albany_ny:cityid/3,new york:stateid/2],[hartford_ct:cityid/3,connecticut:stateid/2],[springfield_il:cityid/3,illinois:stateid/2],[providence_ri:cityid/3,rhode island:stateid/2],[des moines_ia:cityid/3,iowa:stateid/2],[oklahoma city_ok:cityid/3,usa:countryid/2],[richmond_va:cityid/3,usa:countryid/2],[columbia_sc:cityid/3,usa:countryid/2],[lincoln_ne:cityid/3,usa:countryid/2],[oklahoma city_ok:cityid/3,oklahoma:stateid/2]}:{[cityid/3,stateid/2],[cityid/3,countryid/2]}[1] and {[columbia_sc:cityid/3],[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[pierre_sd:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,(capital(A),loc(A,B),capital(B),capital(B),loc(B,A)))
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:349: query => {[granite peak:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(montana)))))
        Example tmpgr210hsl.dlog:350: query => {[death valley:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(california)))))
        Example tmpgr210hsl.dlog:351: query => {} | answer(A,(major(A),city(A),city(A),loc(A,B),const(B,stateid(major))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:354: query => {[district of columbia:stateid/2]} | answer(A,smallest(A,state(A)))
        Example tmpgr210hsl.dlog:355: query => {[2count]} | answer(A,count(B,(river(B),loc(B,C),const(C,stateid(iowa))),A))
        Example tmpgr210hsl.dlog:356: query => {[arkansas:stateid/2],[louisiana:stateid/2],[tennessee:stateid/2],[alabama:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(mississippi))))
        Example tmpgr210hsl.dlog:357: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:358: query => {[mount elbert:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(colorado)))))
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:360: query => {} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(place)))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:361: query => {[des moines_ia:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(iowa))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:362: query => {[1.53e+12length^2]} | answer(A,(size(B,A),const(B,stateid(alaska))))
        Example tmpgr210hsl.dlog:363: query => {[indiana:stateid/2]} | answer(A,smallest(A,(state(A),next_to(A,B),const(B,stateid(michigan)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:365: query => {[307890000count]} | answer(A,(population(B,A),const(B,countryid(usa))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:366: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[louisiana:stateid/2],[missouri:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[arkansas:stateid/2]} | answer(A,(state(A),const(B,riverid(mississippi)),traverse(B,A)))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:368: query => {[denver_co:cityid/3]} | answer(A,(capital(A),loc(A,B),const(B,stateid(colorado))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:371: query => {[Join failed syntactically: {}:{[placeid/2]}[0] and {[columbia_sc:cityid/3],[jefferson city_mo:cityid/3],[frankfort_ky:cityid/3],[phoenix_az:cityid/3],[baton rouge_la:cityid/3],[salt lake city_ut:cityid/3],[concord_nh:cityid/3],[boise_id:cityid/3],[harrisburg_pa:cityid/3],[richmond_va:cityid/3],[boston_ma:cityid/3],[cheyenne_wy:cityid/3],[madison_wi:cityid/3],[des moines_ia:cityid/3],[salem_or:cityid/3],[raleigh_nc:cityid/3],[carson city_nv:cityid/3],[indianapolis_in:cityid/3],[oklahoma city_ok:cityid/3],[olympia_wa:cityid/3],[jackson_ms:cityid/3],[augusta_me:cityid/3],[nashville_tn:cityid/3],[hartford_ct:cityid/3],[washington_dc:cityid/3],[little rock_ar:cityid/3],[austin_tx:cityid/3],[juneau_ak:cityid/3],[providence_ri:cityid/3],[tallahassee_fl:cityid/3],[lincoln_ne:cityid/3],[bismarck_nd:cityid/3],[santa fe_nm:cityid/3],[charleston_wv:cityid/3],[sacramento_ca:cityid/3],[montpelier_vt:cityid/3],[st. paul_mn:cityid/3],[lansing_mi:cityid/3],[trenton_nj:cityid/3],[columbus_oh:cityid/3],[honolulu_hi:cityid/3],[annapolis_md:cityid/3],[atlanta_ga:cityid/3],[montgomery_al:cityid/3],[topeka_ks:cityid/3],[denver_co:cityid/3],[helena_mt:cityid/3],[springfield_il:cityid/3],[dover_de:cityid/3],[albany_ny:cityid/3],[pierre_sd:cityid/3]}:{[cityid/3]}[0] => {}:error]} | answer(A,(capital(A),loc(A,B),smallest(B,capital(B))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:373: query => {[gila:riverid/2],[pecos:riverid/2],[cimarron:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid('new mexico'))))
        Example tmpgr210hsl.dlog:374: query => {[1.31e-05count/length^2]} | answer(A,(density(B,A),const(B,stateid(maine))))
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:376: query => {[austin_tx:cityid/3]} | answer(A,(capital(A),city(A),loc(A,B),const(B,stateid(texas))))
        Example tmpgr210hsl.dlog:377: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),const(B,riverid(missouri)),traverse(B,A)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:378: query => {[1303000count]} | answer(A,(population(B,A),const(B,stateid('new mexico'))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:379: query => {[iowa:stateid/2],[south dakota:stateid/2],[north dakota:stateid/2],[missouri:stateid/2],[nebraska:stateid/2],[montana:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,riverid(missouri))))
        Example tmpgr210hsl.dlog:380: query => {[scotts valley_ca:cityid/3]} | answer(A,smallest(A,(city(A),loc(A,B),const(B,countryid(usa)))))
        Example tmpgr210hsl.dlog:381: query => {[6194length]} | answer(A,(elevation(B,A),const(B,placeid('mount mckinley'))))
        Example tmpgr210hsl.dlog:382: query => {[centerville:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(delaware)))))
        Example tmpgr210hsl.dlog:383: query => {[gulf of mexico:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(mississippi)))))
        Example tmpgr210hsl.dlog:384: query => {[pennsylvania:stateid/2]} | answer(A,(state(A),const(B,cityid(pittsburgh,_)),loc(B,A)))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:385: query => {[new orleans_la:cityid/3]} | answer(A,largest(A,(city(A),loc(A,B),const(B,stateid(louisiana)))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:386: query => {} | answer(A,(population(B,A),const(B,stateid(dallas))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:387: query => {[401800count]} | answer(A,(population(B,A),const(B,stateid(alaska))))
        Example tmpgr210hsl.dlog:388: query => {} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(place)))))
        Example tmpgr210hsl.dlog:389: query => {[bristol township_pa:cityid/3],[bethlehem_pa:cityid/3],[scranton_pa:cityid/3],[penn hills_pa:cityid/3],[reading_pa:cityid/3],[altoona_pa:cityid/3],[abingdon_pa:cityid/3],[erie_pa:cityid/3],[allentown_pa:cityid/3],[upper darby_pa:cityid/3],[lower merion_pa:cityid/3]} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(pennsylvania))))
        Example tmpgr210hsl.dlog:390: query => {} | answer(A,(river(A),loc(A,B),const(B,stateid(alaska))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:391: query => {[Join failed syntactically: {[connecticut:riverid/2],[manchester_nh:cityid/3],[concord_nh:cityid/3],[portsmouth_nh:cityid/3],[mount washington:placeid/2],[atlantic ocean:placeid/2],[nashua_nh:cityid/3]}:{[placeid/2],[lakeid/2],[cityid/3],[mountainid/2],[riverid/2]}[0] and {[new jersey:stateid/2],[new york:stateid/2],[vermont:stateid/2],[delaware:stateid/2],[iowa:stateid/2],[wisconsin:stateid/2],[nevada:stateid/2],[kentucky:stateid/2],[utah:stateid/2],[massachusetts:stateid/2],[oregon:stateid/2],[virginia:stateid/2],[indiana:stateid/2],[new hampshire:stateid/2],[south dakota:stateid/2],[mississippi:stateid/2],[minnesota:stateid/2],[rhode island:stateid/2],[maine:stateid/2],[idaho:stateid/2],[colorado:stateid/2],[district of columbia:stateid/2],[louisiana:stateid/2],[alabama:stateid/2],[north dakota:stateid/2],[wyoming:stateid/2],[pennsylvania:stateid/2],[georgia:stateid/2],[michigan:stateid/2],[missouri:stateid/2],[texas:stateid/2],[illinois:stateid/2],[tennessee:stateid/2],[south carolina:stateid/2],[new mexico:stateid/2],[oklahoma:stateid/2],[arkansas:stateid/2],[alaska:stateid/2],[washington:stateid/2],[connecticut:stateid/2],[kansas:stateid/2],[california:stateid/2],[nebraska:stateid/2],[ohio:stateid/2],[north carolina:stateid/2],[florida:stateid/2],[west virginia:stateid/2],[hawaii:stateid/2],[montana:stateid/2],[maryland:stateid/2],[arizona:stateid/2]}:{[stateid/2]}[0] => {}:error]} | answer(A,(state(A),loc(A,B),const(B,stateid('new hampshire'))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:394: query => {[usa:countryid/2],[texas:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(houston,_))))
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:400: query => {[1569000length]} | answer(A,(len(B,A),const(B,riverid(ohio)),river(B)))
        Example tmpgr210hsl.dlog:401: query => {[2333000length]} | answer(A,(len(B,A),longest(B,(river(B),loc(B,C),const(C,stateid(california))))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:404: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:407: query => {[904078count]} | answer(A,(population(B,A),const(B,cityid(dallas,_))))
        Example tmpgr210hsl.dlog:408: query => {[woodall mountain:placeid/2]} | answer(A,highest(A,(place(A),loc(A,B),const(B,stateid(mississippi)))))
        Example tmpgr210hsl.dlog:409: query => {[170876count]} | answer(A,(population(B,A),const(B,cityid(riverside,_))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:410: query => {[south platte:riverid/2],[arkansas:riverid/2],[colorado:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[republican:riverid/2],[north platte:riverid/2],[green:riverid/2],[san juan:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(colorado))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:418: query => {[mount mckinley:placeid/2]} | answer(A,highest(A,highest(A,highest(A,(place(A),loc(A,B),const(B,countryid(usa)))))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:419: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(major))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:420: query => {[washita:riverid/2],[pecos:riverid/2],[rio grande:riverid/2],[canadian:riverid/2],[red:riverid/2]} | answer(A,(river(A),loc(A,B),const(B,stateid(texas))))
        Example tmpgr210hsl.dlog:421: query => {[california:stateid/2]} | answer(A,largest(B,(state(A),population(A,B))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:423: query => {[Join failed syntactically: {[maroon:mountainid/2,usa:countryid/2],[ohio:riverid/2,west virginia:stateid/2],[pacific ocean:placeid/2,oregon:stateid/2],[irvine_ca:cityid/3,california:stateid/2],[mount greylock:placeid/2,massachusetts:stateid/2],[butte_mt:cityid/3,usa:countryid/2],[silver spring_md:cityid/3,maryland:stateid/2],[cincinnati_oh:cityid/3,usa:countryid/2],[mount sunflower:placeid/2,usa:countryid/2],[columbus_ga:cityid/3,usa:countryid/2],[wabash:riverid/2,indiana:stateid/2],[mcallen_tx:cityid/3,texas:stateid/2],[phoenix_az:cityid/3,arizona:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[riverside_ca:cityid/3,california:stateid/2],[aurora_co:cityid/3,usa:countryid/2],[gulf of mexico:placeid/2,texas:stateid/2],[red river:placeid/2,north dakota:stateid/2],[dayton_oh:cityid/3,ohio:stateid/2],[west valley_ut:cityid/3,usa:countryid/2],[shreveport_la:cityid/3,usa:countryid/2],[portland_me:cityid/3,maine:stateid/2],[tennessee:riverid/2,usa:countryid/2],[owensboro_ky:cityid/3,usa:countryid/2],[bristol_ct:cityid/3,connecticut:stateid/2],[niobrara:riverid/2,nebraska:stateid/2],[koolaupoko_hi:cityid/3,hawaii:stateid/2],[bayonne_nj:cityid/3,new jersey:stateid/2],[atlantic ocean:placeid/2,rhode island:stateid/2],[superior:lakeid/2,usa:countryid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[new york:stateid/2,usa:countryid/2],[belle fourche river:placeid/2,wyoming:stateid/2],[east orange_nj:cityid/3,usa:countryid/2],[st. joseph_mo:cityid/3,missouri:stateid/2],[green:riverid/2,wyoming:stateid/2],[lubbock_tx:cityid/3,usa:countryid/2],[terre haute_in:cityid/3,usa:countryid/2],[waterbury_ct:cityid/3,connecticut:stateid/2],[tucson_az:cityid/3,arizona:stateid/2],[reading_pa:cityid/3,usa:countryid/2],[concord_ca:cityid/3,california:stateid/2],[portland_me:cityid/3,usa:countryid/2],[tyler_tx:cityid/3,texas:stateid/2],[red:lakeid/2,usa:countryid/2],[lynchburg_va:cityid/3,virginia:stateid/2],[st. louis_mo:cityid/3,usa:countryid/2],[boston_ma:cityid/3,usa:countryid/2],[yale:mountainid/2,colorado:stateid/2],[redford_mi:cityid/3,michigan:stateid/2],[mount rogers:placeid/2,usa:countryid/2],[sioux city_ia:cityid/3,iowa:stateid/2],[kendall_fl:cityid/3,usa:countryid/2],[simi valley_ca:cityid/3,california:stateid/2],[colorado:riverid/2,nevada:stateid/2],[denver_co:cityid/3,colorado:stateid/2],[east los angeles_ca:cityid/3,usa:countryid/2],[memphis_tn:cityid/3,usa:countryid/2],[akron_oh:cityid/3,ohio:stateid/2],[vallejo_ca:cityid/3,usa:countryid/2],[cheaha mountain:placeid/2,usa:countryid/2],[mount mansfield:placeid/2,usa:countryid/2],[brasstown bald:placeid/2,georgia:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[walton county:placeid/2,florida:stateid/2],[new hampshire:stateid/2,usa:countryid/2],[camden_nj:cityid/3,usa:countryid/2],[norwalk_ct:cityid/3,connecticut:stateid/2],[boise_id:cityid/3,usa:countryid/2],[san antonio_tx:cityid/3,texas:stateid/2],[penn hills_pa:cityid/3,pennsylvania:stateid/2],[fort smith_ar:cityid/3,usa:countryid/2],[fall river_ma:cityid/3,massachusetts:stateid/2],[buena park_ca:cityid/3,california:stateid/2],[eagle mountain:placeid/2,usa:countryid/2],[winston-salem_nc:cityid/3,usa:countryid/2],[newport beach_ca:cityid/3,usa:countryid/2],[taylor_mi:cityid/3,michigan:stateid/2],[framingham_ma:cityid/3,massachusetts:stateid/2],[spokane_wa:cityid/3,usa:countryid/2],[charles mound:placeid/2,usa:countryid/2],[mount sunflower:placeid/2,kansas:stateid/2],[newark_de:cityid/3,delaware:stateid/2],[royal oak_mi:cityid/3,michigan:stateid/2],[high point:placeid/2,usa:countryid/2],[roswell_nm:cityid/3,new mexico:stateid/2],[sunrise manor_nv:cityid/3,nevada:stateid/2],[medford_ma:cityid/3,massachusetts:stateid/2],[alameda_ca:cityid/3,california:stateid/2],[grand prairie_tx:cityid/3,texas:stateid/2],[magazine mountain:placeid/2,arkansas:stateid/2],[south buttress:mountainid/2,alaska:stateid/2],[ocheyedan mound:placeid/2,usa:countryid/2],[san juan:riverid/2,usa:countryid/2],[ontario_ca:cityid/3,usa:countryid/2],[salinas_ca:cityid/3,california:stateid/2],[buffalo_ny:cityid/3,new york:stateid/2],[fairbanks_ak:cityid/3,alaska:stateid/2],[little missouri:riverid/2,south dakota:stateid/2],[mount curwood:placeid/2,michigan:stateid/2],[grand island_ne:cityid/3,nebraska:stateid/2],[fairfield_ca:cityid/3,california:stateid/2],[pine bluff_ar:cityid/3,arkansas:stateid/2],[tallahassee_fl:cityid/3,florida:stateid/2],[rio grande:riverid/2,usa:countryid/2],[jackson_ms:cityid/3,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[bennington_vt:cityid/3,vermont:stateid/2],[elyria_oh:cityid/3,ohio:stateid/2],[charlotte_nc:cityid/3,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[wrangell:mountainid/2,usa:countryid/2],[verdigris river:placeid/2,kansas:stateid/2],[portsmouth_nh:cityid/3,usa:countryid/2],[concord_nh:cityid/3,usa:countryid/2],[beaumont_tx:cityid/3,texas:stateid/2],[gila:riverid/2,arizona:stateid/2],[appleton_wi:cityid/3,usa:countryid/2],[dallas_tx:cityid/3,usa:countryid/2],[abilene_tx:cityid/3,usa:countryid/2],[teshekpuk:lakeid/2,alaska:stateid/2],[green:riverid/2,utah:stateid/2],[white:mountainid/2,california:stateid/2],[altoona_pa:cityid/3,pennsylvania:stateid/2],[mount hood:placeid/2,oregon:stateid/2],[south gate_ca:cityid/3,california:stateid/2],[arkansas:riverid/2,usa:countryid/2],[juneau_ak:cityid/3,alaska:stateid/2],[huron:lakeid/2,usa:countryid/2],[peoria_il:cityid/3,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[lynchburg_va:cityid/3,usa:countryid/2],[sparks_nv:cityid/3,usa:countryid/2],[missouri:stateid/2,usa:countryid/2],[fremont_ca:cityid/3,usa:countryid/2],[west covina_ca:cityid/3,usa:countryid/2],[boulder_co:cityid/3,usa:countryid/2],[grand island_ne:cityid/3,usa:countryid/2],[greenville_sc:cityid/3,south carolina:stateid/2],[timms hill:placeid/2,usa:countryid/2],[oakland_ca:cityid/3,california:stateid/2],[michigan:lakeid/2,wisconsin:stateid/2],[charleston_wv:cityid/3,west virginia:stateid/2],[portland_or:cityid/3,oregon:stateid/2],[billings_mt:cityid/3,montana:stateid/2],[gannett peak:placeid/2,usa:countryid/2],[hampton_va:cityid/3,virginia:stateid/2],[lakewood_ca:cityid/3,california:stateid/2],[white butte:placeid/2,north dakota:stateid/2],[bridgeport_ct:cityid/3,usa:countryid/2],[verdigris river:placeid/2,usa:countryid/2],[longview_tx:cityid/3,texas:stateid/2],[torrance_ca:cityid/3,usa:countryid/2],[potomac:riverid/2,maryland:stateid/2],[lake superior:placeid/2,minnesota:stateid/2],[charleston_sc:cityid/3,usa:countryid/2],[long beach_ca:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,florida:stateid/2],[upper darby_pa:cityid/3,usa:countryid/2],[phoenix_az:cityid/3,usa:countryid/2],[kenosha_wi:cityid/3,wisconsin:stateid/2],[lansing_mi:cityid/3,usa:countryid/2],[parma_oh:cityid/3,usa:countryid/2],[newark_nj:cityid/3,usa:countryid/2],[fargo_nd:cityid/3,usa:countryid/2],[fort wayne_in:cityid/3,indiana:stateid/2],[kings peak:placeid/2,utah:stateid/2],[okeechobee:lakeid/2,florida:stateid/2],[burbank_ca:cityid/3,usa:countryid/2],[koolaupoko_hi:cityid/3,usa:countryid/2],[kendall_fl:cityid/3,florida:stateid/2],[watertown_sd:cityid/3,south dakota:stateid/2],[winnebago:lakeid/2,wisconsin:stateid/2],[essex_vt:cityid/3,vermont:stateid/2],[mississippi river:placeid/2,tennessee:stateid/2],[mauna kea:placeid/2,hawaii:stateid/2],[euclid_oh:cityid/3,usa:countryid/2],[snake:riverid/2,usa:countryid/2],[belle fourche river:placeid/2,usa:countryid/2],[boulder_co:cityid/3,colorado:stateid/2],[delaware river:placeid/2,usa:countryid/2],[allentown_pa:cityid/3,usa:countryid/2],[topeka_ks:cityid/3,usa:countryid/2],[lower merion_pa:cityid/3,usa:countryid/2],[stockton_ca:cityid/3,usa:countryid/2],[bellevue_wa:cityid/3,washington:stateid/2],[lafayette_la:cityid/3,usa:countryid/2],[lynn_ma:cityid/3,massachusetts:stateid/2],[ocheyedan mound:placeid/2,iowa:stateid/2],[tenleytown:placeid/2,usa:countryid/2],[sill:mountainid/2,california:stateid/2],[miami beach_fl:cityid/3,usa:countryid/2],[provo_ut:cityid/3,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[arkansas river:placeid/2,usa:countryid/2],[concord_ca:cityid/3,usa:countryid/2],[middletown_nj:cityid/3,new jersey:stateid/2],[iowa:stateid/2,usa:countryid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[bridgeport_ct:cityid/3,connecticut:stateid/2],[superior:lakeid/2,michigan:stateid/2],[canton_oh:cityid/3,usa:countryid/2],[davenport_ia:cityid/3,iowa:stateid/2],[laredo_tx:cityid/3,texas:stateid/2],[kenner_la:cityid/3,usa:countryid/2],[tucson_az:cityid/3,usa:countryid/2],[bangor_me:cityid/3,maine:stateid/2],[fort worth_tx:cityid/3,usa:countryid/2],[fresno_ca:cityid/3,california:stateid/2],[west covina_ca:cityid/3,california:stateid/2],[lansing_mi:cityid/3,michigan:stateid/2],[knoxville_tn:cityid/3,usa:countryid/2],[new bedford_ma:cityid/3,usa:countryid/2],[east buttress:mountainid/2,usa:countryid/2],[washita:riverid/2,texas:stateid/2],[springfield_ma:cityid/3,usa:countryid/2],[riverside_ca:cityid/3,usa:countryid/2],[springfield_oh:cityid/3,usa:countryid/2],[little missouri:riverid/2,north dakota:stateid/2],[biloxi_ms:cityid/3,mississippi:stateid/2],[neosho:riverid/2,kansas:stateid/2],[north little rock_ar:cityid/3,arkansas:stateid/2],[macon_ga:cityid/3,georgia:stateid/2],[los angeles_ca:cityid/3,usa:countryid/2],[missouri:riverid/2,south dakota:stateid/2],[bear:mountainid/2,usa:countryid/2],[troy_mi:cityid/3,usa:countryid/2],[columbus_oh:cityid/3,ohio:stateid/2],[richmond_va:cityid/3,virginia:stateid/2],[north charleston_sc:cityid/3,south carolina:stateid/2],[erie_pa:cityid/3,pennsylvania:stateid/2],[chesapeake_va:cityid/3,usa:countryid/2],[maine:stateid/2,usa:countryid/2],[fort collins_co:cityid/3,colorado:stateid/2],[mobile_al:cityid/3,alabama:stateid/2],[superior:lakeid/2,minnesota:stateid/2],[norwalk_ct:cityid/3,usa:countryid/2],[cimarron:riverid/2,kansas:stateid/2],[saginaw_mi:cityid/3,usa:countryid/2],[laredo_tx:cityid/3,usa:countryid/2],[pontiac_mi:cityid/3,usa:countryid/2],[kenner_la:cityid/3,louisiana:stateid/2],[bethlehem_pa:cityid/3,usa:countryid/2],[potomac:riverid/2,west virginia:stateid/2],[mount whitney:placeid/2,usa:countryid/2],[fort wayne_in:cityid/3,usa:countryid/2],[lexington_ky:cityid/3,usa:countryid/2],[silver spring_md:cityid/3,usa:countryid/2],[shasta:mountainid/2,california:stateid/2],[new orleans_la:cityid/3,usa:countryid/2],[san leandro_ca:cityid/3,usa:countryid/2],[connecticut:riverid/2,new hampshire:stateid/2],[cheyenne_wy:cityid/3,wyoming:stateid/2],[atlantic ocean:placeid/2,south carolina:stateid/2],[hattiesburg_ms:cityid/3,mississippi:stateid/2],[cicero_il:cityid/3,usa:countryid/2],[browne tower:mountainid/2,usa:countryid/2],[mount katahdin:placeid/2,maine:stateid/2],[st. francis river:placeid/2,usa:countryid/2],[powder:riverid/2,usa:countryid/2],[taylor_mi:cityid/3,usa:countryid/2],[pine bluff_ar:cityid/3,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[mesquite_tx:cityid/3,usa:countryid/2],[mille lacs:lakeid/2,minnesota:stateid/2],[parkersburg_wv:cityid/3,west virginia:stateid/2],[austin_tx:cityid/3,texas:stateid/2],[idaho:stateid/2,usa:countryid/2],[clinton_mi:cityid/3,usa:countryid/2],[reno_nv:cityid/3,usa:countryid/2],[springfield_or:cityid/3,usa:countryid/2],[bianca:mountainid/2,colorado:stateid/2],[bloomington_mn:cityid/3,usa:countryid/2],[san mateo_ca:cityid/3,usa:countryid/2],[spokane_wa:cityid/3,washington:stateid/2],[anchorage_ak:cityid/3,alaska:stateid/2],[eugene_or:cityid/3,usa:countryid/2],[wilson:mountainid/2,usa:countryid/2],[citrus heights_ca:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,new hampshire:stateid/2],[rochester_mn:cityid/3,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[portsmouth_nh:cityid/3,new hampshire:stateid/2],[elyria_oh:cityid/3,usa:countryid/2],[mount washington:placeid/2,new hampshire:stateid/2],[sassafras mountain:placeid/2,usa:countryid/2],[arkansas river:placeid/2,colorado:stateid/2],[cranston_ri:cityid/3,usa:countryid/2],[yonkers_ny:cityid/3,usa:countryid/2],[glendale_az:cityid/3,arizona:stateid/2],[little missouri:riverid/2,usa:countryid/2],[rainier:mountainid/2,usa:countryid/2],[bayonne_nj:cityid/3,usa:countryid/2],[philadelphia_pa:cityid/3,pennsylvania:stateid/2],[yellowstone:riverid/2,north dakota:stateid/2],[lake erie:placeid/2,usa:countryid/2],[republican:riverid/2,usa:countryid/2],[okeechobee:lakeid/2,usa:countryid/2],[centerville:placeid/2,delaware:stateid/2],[cumberland:riverid/2,usa:countryid/2],[cedar rapids_ia:cityid/3,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[abilene_tx:cityid/3,texas:stateid/2],[tahoe:lakeid/2,california:stateid/2],[south gate_ca:cityid/3,usa:countryid/2],[edison_nj:cityid/3,new jersey:stateid/2],[gainesville_fl:cityid/3,usa:countryid/2],[granite peak:placeid/2,montana:stateid/2],[mississippi river:placeid/2,illinois:stateid/2],[champaign_il:cityid/3,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[hammond_in:cityid/3,usa:countryid/2],[largo_fl:cityid/3,usa:countryid/2],[st. joseph_mo:cityid/3,usa:countryid/2],[syracuse_ny:cityid/3,new york:stateid/2],[mount rainier:placeid/2,washington:stateid/2],[grand rapids_mi:cityid/3,michigan:stateid/2],[florida:stateid/2,usa:countryid/2],[casper_wy:cityid/3,wyoming:stateid/2],[yonkers_ny:cityid/3,new york:stateid/2],[st. petersburg_fl:cityid/3,usa:countryid/2],[west hartford_ct:cityid/3,usa:countryid/2],[lewiston_id:cityid/3,usa:countryid/2],[albuquerque_nm:cityid/3,new mexico:stateid/2],[omaha_ne:cityid/3,usa:countryid/2],[pontchartrain:lakeid/2,louisiana:stateid/2],[idaho falls_id:cityid/3,usa:countryid/2],[missoula_mt:cityid/3,usa:countryid/2],[champlain:lakeid/2,vermont:stateid/2],[duluth_mn:cityid/3,minnesota:stateid/2],[meridian_ms:cityid/3,mississippi:stateid/2],[salt lake city_ut:cityid/3,utah:stateid/2],[lake champlain:placeid/2,vermont:stateid/2],[richardson_tx:cityid/3,texas:stateid/2],[louisville_ky:cityid/3,kentucky:stateid/2],[detroit_mi:cityid/3,michigan:stateid/2],[mesa_az:cityid/3,arizona:stateid/2],[waco_tx:cityid/3,usa:countryid/2],[meriden_ct:cityid/3,usa:countryid/2],[montpelier_vt:cityid/3,vermont:stateid/2],[dayton_oh:cityid/3,usa:countryid/2],[becharof:lakeid/2,usa:countryid/2],[richardson_tx:cityid/3,usa:countryid/2],[fayetteville_nc:cityid/3,north carolina:stateid/2],[backbone mountain:placeid/2,maryland:stateid/2],[sitka_ak:cityid/3,alaska:stateid/2],[escondido_ca:cityid/3,usa:countryid/2],[cumberland:riverid/2,kentucky:stateid/2],[olympia_wa:cityid/3,washington:stateid/2],[clingmans dome:placeid/2,tennessee:stateid/2],[compton_ca:cityid/3,california:stateid/2],[arvada_co:cityid/3,usa:countryid/2],[toledo_oh:cityid/3,ohio:stateid/2],[schenectady_ny:cityid/3,new york:stateid/2],[garden grove_ca:cityid/3,usa:countryid/2],[hattiesburg_ms:cityid/3,usa:countryid/2],[torrance_ca:cityid/3,california:stateid/2],[powder:riverid/2,montana:stateid/2],[torreys:mountainid/2,usa:countryid/2],[south platte:riverid/2,colorado:stateid/2],[toledo_oh:cityid/3,usa:countryid/2],[casper_wy:cityid/3,usa:countryid/2],[bross:mountainid/2,colorado:stateid/2],[ogden_ut:cityid/3,utah:stateid/2],[lakewood_oh:cityid/3,usa:countryid/2],[arkansas:riverid/2,colorado:stateid/2],[davenport_ia:cityid/3,usa:countryid/2],[north platte:riverid/2,nebraska:stateid/2],[new britain_ct:cityid/3,connecticut:stateid/2],[republican:riverid/2,colorado:stateid/2],[high point:placeid/2,new jersey:stateid/2],[madison_wi:cityid/3,wisconsin:stateid/2],[abingdon_pa:cityid/3,pennsylvania:stateid/2],[champlain:lakeid/2,new york:stateid/2],[cicero_il:cityid/3,illinois:stateid/2],[new britain_ct:cityid/3,usa:countryid/2],[decatur_il:cityid/3,usa:countryid/2],[syracuse_ny:cityid/3,usa:countryid/2],[brasstown bald:placeid/2,usa:countryid/2],[st. clair shores_mi:cityid/3,usa:countryid/2],[durham_nc:cityid/3,usa:countryid/2],[humphreys peak:placeid/2,arizona:stateid/2],[saginaw_mi:cityid/3,michigan:stateid/2],[green bay_wi:cityid/3,usa:countryid/2],[little river:placeid/2,usa:countryid/2],[little missouri:riverid/2,montana:stateid/2],[philadelphia_pa:cityid/3,usa:countryid/2],[red:riverid/2,arkansas:stateid/2],[gainesville_fl:cityid/3,florida:stateid/2],[youngstown_oh:cityid/3,ohio:stateid/2],[fullerton_ca:cityid/3,usa:countryid/2],[new haven_ct:cityid/3,connecticut:stateid/2],[new york_ny:cityid/3,new york:stateid/2],[oceanside_ca:cityid/3,usa:countryid/2],[boundary peak:placeid/2,usa:countryid/2],[irvington_nj:cityid/3,usa:countryid/2],[berkeley_ca:cityid/3,usa:countryid/2],[racine_wi:cityid/3,usa:countryid/2],[des moines_ia:cityid/3,usa:countryid/2],[niagara falls_ny:cityid/3,new york:stateid/2],[washington_dc:cityid/3,district of columbia:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[mesquite_tx:cityid/3,texas:stateid/2],[bismarck_nd:cityid/3,usa:countryid/2],[rockford_il:cityid/3,usa:countryid/2],[harvard:mountainid/2,colorado:stateid/2],[nashua_nh:cityid/3,new hampshire:stateid/2],[chattanooga_tn:cityid/3,tennessee:stateid/2],[daly city_ca:cityid/3,california:stateid/2],[erie:lakeid/2,pennsylvania:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[ohio:stateid/2,usa:countryid/2],[miami beach_fl:cityid/3,florida:stateid/2],[santa monica_ca:cityid/3,california:stateid/2],[costa mesa_ca:cityid/3,california:stateid/2],[dearborn_mi:cityid/3,usa:countryid/2],[charles mound:placeid/2,illinois:stateid/2],[honolulu_hi:cityid/3,hawaii:stateid/2],[kennedy:mountainid/2,usa:countryid/2],[lowell_ma:cityid/3,massachusetts:stateid/2],[north platte:riverid/2,colorado:stateid/2],[borah peak:placeid/2,usa:countryid/2],[allegheny:riverid/2,usa:countryid/2],[tyler_tx:cityid/3,usa:countryid/2],[chesapeake_va:cityid/3,virginia:stateid/2],[memphis_tn:cityid/3,tennessee:stateid/2],[fairfield_ca:cityid/3,usa:countryid/2],[cheektowaga_ny:cityid/3,new york:stateid/2],[mount washington:placeid/2,usa:countryid/2],[concord_nh:cityid/3,new hampshire:stateid/2],[little rock_ar:cityid/3,arkansas:stateid/2],[north little rock_ar:cityid/3,usa:countryid/2],[port arthur_tx:cityid/3,usa:countryid/2],[walton county:placeid/2,usa:countryid/2],[eagle mountain:placeid/2,minnesota:stateid/2],[ohio:riverid/2,indiana:stateid/2],[michigan:lakeid/2,indiana:stateid/2],[rock springs_wy:cityid/3,wyoming:stateid/2],[red:lakeid/2,minnesota:stateid/2],[alabama:stateid/2,usa:countryid/2],[akron_oh:cityid/3,usa:countryid/2],[warren_mi:cityid/3,usa:countryid/2],[centerville:placeid/2,usa:countryid/2],[niobrara:riverid/2,wyoming:stateid/2],[lakewood_ca:cityid/3,usa:countryid/2],[delaware river:placeid/2,pennsylvania:stateid/2],[republican:riverid/2,kansas:stateid/2],[kit carson:mountainid/2,usa:countryid/2],[waterford_mi:cityid/3,michigan:stateid/2],[magazine mountain:placeid/2,usa:countryid/2],[cedar rapids_ia:cityid/3,iowa:stateid/2],[lorain_oh:cityid/3,usa:countryid/2],[red bluff reservoir:placeid/2,new mexico:stateid/2],[gila:riverid/2,usa:countryid/2],[worcester_ma:cityid/3,usa:countryid/2],[farmington hills_mi:cityid/3,usa:countryid/2],[anchorage_ak:cityid/3,usa:countryid/2],[montgomery_al:cityid/3,alabama:stateid/2],[springfield_or:cityid/3,oregon:stateid/2],[tennessee:riverid/2,kentucky:stateid/2],[shreveport_la:cityid/3,louisiana:stateid/2],[north palisade:mountainid/2,california:stateid/2],[baltimore_md:cityid/3,usa:countryid/2],[east orange_nj:cityid/3,new jersey:stateid/2],[austin_tx:cityid/3,usa:countryid/2],[portsmouth_va:cityid/3,usa:countryid/2],[trenton_nj:cityid/3,usa:countryid/2],[greenwich_ct:cityid/3,usa:countryid/2],[canadian:riverid/2,oklahoma:stateid/2],[santa barbara_ca:cityid/3,usa:countryid/2],[wichita_ks:cityid/3,kansas:stateid/2],[mississippi river:placeid/2,iowa:stateid/2],[annapolis_md:cityid/3,maryland:stateid/2],[black mesa:placeid/2,oklahoma:stateid/2],[mckinley:mountainid/2,alaska:stateid/2],[kansas:stateid/2,usa:countryid/2],[paterson_nj:cityid/3,usa:countryid/2],[wrangell:mountainid/2,alaska:stateid/2],[alaska:stateid/2,usa:countryid/2],[escondido_ca:cityid/3,california:stateid/2],[white butte:placeid/2,usa:countryid/2],[flint_mi:cityid/3,usa:countryid/2],[madison_wi:cityid/3,usa:countryid/2],[berkeley_ca:cityid/3,california:stateid/2],[columbia_sc:cityid/3,south carolina:stateid/2],[red:riverid/2,new mexico:stateid/2],[tampa_fl:cityid/3,florida:stateid/2],[lewiston_id:cityid/3,idaho:stateid/2],[san diego_ca:cityid/3,usa:countryid/2],[santa fe_nm:cityid/3,new mexico:stateid/2],[new bedford_ma:cityid/3,massachusetts:stateid/2],[great falls_mt:cityid/3,usa:countryid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[meriden_ct:cityid/3,connecticut:stateid/2],[waco_tx:cityid/3,texas:stateid/2],[pomona_ca:cityid/3,california:stateid/2],[simi valley_ca:cityid/3,usa:countryid/2],[warren_mi:cityid/3,michigan:stateid/2],[belford:mountainid/2,colorado:stateid/2],[modesto_ca:cityid/3,california:stateid/2],[euclid_oh:cityid/3,ohio:stateid/2],[el paso_tx:cityid/3,usa:countryid/2],[stamford_ct:cityid/3,connecticut:stateid/2],[knoxville_tn:cityid/3,tennessee:stateid/2],[north dakota:stateid/2,usa:countryid/2],[macon_ga:cityid/3,usa:countryid/2],[altoona_pa:cityid/3,usa:countryid/2],[overland park_ks:cityid/3,usa:countryid/2],[rainy:lakeid/2,usa:countryid/2],[harney peak:placeid/2,south dakota:stateid/2],[metairie_la:cityid/3,louisiana:stateid/2],[mount elbert:placeid/2,usa:countryid/2],[foraker:mountainid/2,usa:countryid/2],[republican:riverid/2,nebraska:stateid/2],[little river:placeid/2,oklahoma:stateid/2],[grand prairie_tx:cityid/3,usa:countryid/2],[blackburn:mountainid/2,alaska:stateid/2],[salton sea:lakeid/2,usa:countryid/2],[connecticut:stateid/2,usa:countryid/2],[crestone:mountainid/2,usa:countryid/2],[high point_nc:cityid/3,usa:countryid/2],[neosho:riverid/2,usa:countryid/2],[teshekpuk:lakeid/2,usa:countryid/2],[oak lawn_il:cityid/3,illinois:stateid/2],[cleveland_oh:cityid/3,usa:countryid/2],[chula vista_ca:cityid/3,usa:countryid/2],[providence_ri:cityid/3,usa:countryid/2],[clearwater_fl:cityid/3,florida:stateid/2],[mount davis:placeid/2,usa:countryid/2],[rapid city_sd:cityid/3,usa:countryid/2],[lawton_ok:cityid/3,oklahoma:stateid/2],[huntington beach_ca:cityid/3,usa:countryid/2],[oxnard_ca:cityid/3,usa:countryid/2],[royal oak_mi:cityid/3,usa:countryid/2],[atlanta_ga:cityid/3,georgia:stateid/2],[fargo_nd:cityid/3,north dakota:stateid/2],[evansville_in:cityid/3,indiana:stateid/2],[erie:lakeid/2,ohio:stateid/2],[kentucky:stateid/2,usa:countryid/2],[north carolina:stateid/2,usa:countryid/2],[niagara falls_ny:cityid/3,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[baton rouge_la:cityid/3,usa:countryid/2],[north palisade:mountainid/2,usa:countryid/2],[lincoln_ne:cityid/3,nebraska:stateid/2],[sunnyvale_ca:cityid/3,california:stateid/2],[sparks_nv:cityid/3,nevada:stateid/2],[mckinley:mountainid/2,usa:countryid/2],[red:riverid/2,texas:stateid/2],[st. paul_mn:cityid/3,minnesota:stateid/2],[scranton_pa:cityid/3,pennsylvania:stateid/2],[waukegan_il:cityid/3,usa:countryid/2],[charleston_wv:cityid/3,usa:countryid/2],[covington_ky:cityid/3,kentucky:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[levittown_ny:cityid/3,usa:countryid/2],[new orleans:placeid/2,usa:countryid/2],[whitney:mountainid/2,usa:countryid/2],[evanston_il:cityid/3,illinois:stateid/2],[columbia:riverid/2,oregon:stateid/2],[georgia:stateid/2,usa:countryid/2],[danbury_ct:cityid/3,usa:countryid/2],[waltham_ma:cityid/3,usa:countryid/2],[gulf of mexico:placeid/2,mississippi:stateid/2],[niobrara:riverid/2,usa:countryid/2],[churchill:mountainid/2,usa:countryid/2],[crestone:mountainid/2,colorado:stateid/2],[billings_mt:cityid/3,usa:countryid/2],[pierre_sd:cityid/3,south dakota:stateid/2],[cherry hill_nj:cityid/3,usa:countryid/2],[sassafras mountain:placeid/2,south carolina:stateid/2],[helena_mt:cityid/3,montana:stateid/2],[pacific ocean:placeid/2,usa:countryid/2],[shavano:mountainid/2,usa:countryid/2],[somerville_ma:cityid/3,usa:countryid/2],[white:riverid/2,usa:countryid/2],[clinton_mi:cityid/3,michigan:stateid/2],[flathead:lakeid/2,montana:stateid/2],[santa ana_ca:cityid/3,california:stateid/2],[metairie_la:cityid/3,usa:countryid/2],[danbury_ct:cityid/3,connecticut:stateid/2],[new jersey:stateid/2,usa:countryid/2],[carson_ca:cityid/3,usa:countryid/2],[mount katahdin:placeid/2,usa:countryid/2],[mcallen_tx:cityid/3,usa:countryid/2],[mount davidson:placeid/2,san francisco_ca:cityid/3],[hammond_in:cityid/3,indiana:stateid/2],[tuscaloosa_al:cityid/3,usa:countryid/2],[idaho falls_id:cityid/3,idaho:stateid/2],[guadalupe peak:placeid/2,usa:countryid/2],[costa mesa_ca:cityid/3,usa:countryid/2],[auburn_me:cityid/3,usa:countryid/2],[wichita falls_tx:cityid/3,texas:stateid/2],[jackson_ms:cityid/3,mississippi:stateid/2],[gila:riverid/2,new mexico:stateid/2],[dover_de:cityid/3,delaware:stateid/2],[fort lauderdale_fl:cityid/3,usa:countryid/2],[ohio river:placeid/2,indiana:stateid/2],[quincy_ma:cityid/3,usa:countryid/2],[reno_nv:cityid/3,nevada:stateid/2],[dover_de:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,new york:stateid/2],[milwaukee_wi:cityid/3,wisconsin:stateid/2],[lexington_ky:cityid/3,kentucky:stateid/2],[lake michigan:placeid/2,usa:countryid/2],[superior:lakeid/2,wisconsin:stateid/2],[paterson_nj:cityid/3,new jersey:stateid/2],[potomac:riverid/2,virginia:stateid/2],[sacramento_ca:cityid/3,california:stateid/2],[rainy:lakeid/2,minnesota:stateid/2],[indiana:stateid/2,usa:countryid/2],[warwick_ri:cityid/3,rhode island:stateid/2],[wheeler peak:placeid/2,usa:countryid/2],[wichita falls_tx:cityid/3,usa:countryid/2],[snake:riverid/2,wyoming:stateid/2],[dearborn heights_mi:cityid/3,michigan:stateid/2],[washington:stateid/2,usa:countryid/2],[huntsville_al:cityid/3,alabama:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[springfield_ma:cityid/3,massachusetts:stateid/2],[colorado:riverid/2,arizona:stateid/2],[kootenai river:placeid/2,usa:countryid/2],[anderson_in:cityid/3,usa:countryid/2],[nashua_nh:cityid/3,usa:countryid/2],[canton_oh:cityid/3,ohio:stateid/2],[glendale_az:cityid/3,usa:countryid/2],[juneau_ak:cityid/3,usa:countryid/2],[kalamazoo_mi:cityid/3,usa:countryid/2],[fort smith_ar:cityid/3,arkansas:stateid/2],[browne tower:mountainid/2,alaska:stateid/2],[mount mitchell:placeid/2,north carolina:stateid/2],[st. elias:mountainid/2,alaska:stateid/2],[kettering_oh:cityid/3,usa:countryid/2],[woodbridge_nj:cityid/3,new jersey:stateid/2],[lincoln:mountainid/2,colorado:stateid/2],[muncie_in:cityid/3,indiana:stateid/2],[green bay_wi:cityid/3,wisconsin:stateid/2],[kings peak:placeid/2,usa:countryid/2],[fort lauderdale_fl:cityid/3,florida:stateid/2],[minot_nd:cityid/3,north dakota:stateid/2],[bighorn:riverid/2,usa:countryid/2],[red river:placeid/2,usa:countryid/2],[el cajon_ca:cityid/3,usa:countryid/2],[independence_mo:cityid/3,missouri:stateid/2],[cambridge_ma:cityid/3,usa:countryid/2],[churchill:mountainid/2,alaska:stateid/2],[mississippi:riverid/2,missouri:stateid/2],[norman_ok:cityid/3,usa:countryid/2],[santa rosa_ca:cityid/3,usa:countryid/2],[newton_ma:cityid/3,usa:countryid/2],[fremont_ca:cityid/3,california:stateid/2],[mount vernon_ny:cityid/3,new york:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[ogden_ut:cityid/3,usa:countryid/2],[ouachita river:placeid/2,arkansas:stateid/2],[cherry hill_nj:cityid/3,new jersey:stateid/2],[utica_ny:cityid/3,usa:countryid/2],[st. paul_mn:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,massachusetts:stateid/2],[inglewood_ca:cityid/3,california:stateid/2],[south buttress:mountainid/2,usa:countryid/2],[wilmington_de:cityid/3,usa:countryid/2],[huron:lakeid/2,michigan:stateid/2],[atlantic ocean:placeid/2,virginia:stateid/2],[rochester_mn:cityid/3,minnesota:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[franklin township:placeid/2,indiana:stateid/2],[arlington heights_il:cityid/3,illinois:stateid/2],[bristol_ct:cityid/3,usa:countryid/2],[tuscaloosa_al:cityid/3,alabama:stateid/2],[huntington_wv:cityid/3,west virginia:stateid/2],[mount frissell:placeid/2,usa:countryid/2],[maryland:stateid/2,usa:countryid/2],[salt lake city_ut:cityid/3,usa:countryid/2],[pacific ocean:placeid/2,washington:stateid/2],[michigan:lakeid/2,illinois:stateid/2],[garland_tx:cityid/3,texas:stateid/2],[yellowstone:riverid/2,montana:stateid/2],[carson_ca:cityid/3,california:stateid/2],[tenleytown_dc:cityid/3,district of columbia:stateid/2],[pittsburgh_pa:cityid/3,pennsylvania:stateid/2],[delaware:riverid/2,usa:countryid/2],[ann arbor_mi:cityid/3,usa:countryid/2],[rutland_vt:cityid/3,vermont:stateid/2],[dakota:riverid/2,north dakota:stateid/2],[port arthur_tx:cityid/3,texas:stateid/2],[green:riverid/2,colorado:stateid/2],[orange_ca:cityid/3,california:stateid/2],[lake champlain:placeid/2,usa:countryid/2],[las cruces_nm:cityid/3,usa:countryid/2],[tampa_fl:cityid/3,usa:countryid/2],[quincy_ma:cityid/3,massachusetts:stateid/2],[mount mckinley:placeid/2,alaska:stateid/2],[shavano:mountainid/2,colorado:stateid/2],[bear:mountainid/2,alaska:stateid/2],[pontchartrain:lakeid/2,usa:countryid/2],[youngstown_oh:cityid/3,usa:countryid/2],[anaheim_ca:cityid/3,california:stateid/2],[michigan:stateid/2,usa:countryid/2],[montgomery_al:cityid/3,usa:countryid/2],[dakota:riverid/2,usa:countryid/2],[wyoming_mi:cityid/3,usa:countryid/2],[arlington_tx:cityid/3,texas:stateid/2],[new haven_ct:cityid/3,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[louisville_ky:cityid/3,usa:countryid/2],[thousand oaks_ca:cityid/3,california:stateid/2],[san diego_ca:cityid/3,california:stateid/2],[wheeler peak:placeid/2,new mexico:stateid/2],[laramie_wy:cityid/3,wyoming:stateid/2],[potomac river:placeid/2,district of columbia:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[maroon:mountainid/2,colorado:stateid/2],[arlington_tx:cityid/3,usa:countryid/2],[detroit_mi:cityid/3,usa:countryid/2],[kalamazoo_mi:cityid/3,michigan:stateid/2],[granite peak:placeid/2,usa:countryid/2],[nebraska:stateid/2,usa:countryid/2],[dallas_tx:cityid/3,texas:stateid/2],[potomac:riverid/2,usa:countryid/2],[mount greylock:placeid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[arlington heights_il:cityid/3,usa:countryid/2],[columbus_oh:cityid/3,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[chula vista_ca:cityid/3,california:stateid/2],[charleston_sc:cityid/3,south carolina:stateid/2],[big stone lake:placeid/2,south dakota:stateid/2],[georgetown_dc:cityid/3,usa:countryid/2],[pueblo_co:cityid/3,usa:countryid/2],[sanford:mountainid/2,alaska:stateid/2],[alexandria_va:cityid/3,virginia:stateid/2],[clifton_nj:cityid/3,new jersey:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[tulsa_ok:cityid/3,oklahoma:stateid/2],[scotts valley_ca:cityid/3,california:stateid/2],[hubbard:mountainid/2,usa:countryid/2],[waukegan_il:cityid/3,illinois:stateid/2],[albany_ga:cityid/3,georgia:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[las vegas_nv:cityid/3,nevada:stateid/2],[indianapolis_in:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,north carolina:stateid/2],[mount mansfield:placeid/2,vermont:stateid/2],[birmingham_al:cityid/3,usa:countryid/2],[white:mountainid/2,usa:countryid/2],[woodbridge_nj:cityid/3,usa:countryid/2],[california:stateid/2,usa:countryid/2],[atlantic ocean:placeid/2,usa:countryid/2],[new york_ny:cityid/3,usa:countryid/2],[washita:riverid/2,usa:countryid/2],[hayward_ca:cityid/3,california:stateid/2],[johnson township:placeid/2,nebraska:stateid/2],[arkansas:riverid/2,arkansas:stateid/2],[dubuque_ia:cityid/3,usa:countryid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[farmington hills_mi:cityid/3,michigan:stateid/2],[somerville_ma:cityid/3,massachusetts:stateid/2],[grand rapids_mi:cityid/3,usa:countryid/2],[daly city_ca:cityid/3,usa:countryid/2],[pensacola_fl:cityid/3,florida:stateid/2],[kenosha_wi:cityid/3,usa:countryid/2],[big stone lake:placeid/2,usa:countryid/2],[thousand oaks_ca:cityid/3,usa:countryid/2],[omaha_ne:cityid/3,nebraska:stateid/2],[brockton_ma:cityid/3,usa:countryid/2],[little rock_ar:cityid/3,usa:countryid/2],[camden_nj:cityid/3,new jersey:stateid/2],[elbert:mountainid/2,usa:countryid/2],[birmingham_al:cityid/3,alabama:stateid/2],[wabash:riverid/2,ohio:stateid/2],[vermont:stateid/2,usa:countryid/2],[savannah_ga:cityid/3,usa:countryid/2],[monroe_la:cityid/3,usa:countryid/2],[smoky hill:riverid/2,kansas:stateid/2],[meridian_ms:cityid/3,usa:countryid/2],[norman_ok:cityid/3,oklahoma:stateid/2],[las vegas_nv:cityid/3,usa:countryid/2],[alhambra_ca:cityid/3,california:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[honolulu_hi:cityid/3,usa:countryid/2],[ewa_hi:cityid/3,hawaii:stateid/2],[glendale_ca:cityid/3,usa:countryid/2],[antero:mountainid/2,usa:countryid/2],[southeast corner:placeid/2,nebraska:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[buena park_ca:cityid/3,usa:countryid/2],[taum sauk mountain:placeid/2,missouri:stateid/2],[wilson:mountainid/2,colorado:stateid/2],[topeka_ks:cityid/3,kansas:stateid/2],[brockton_ma:cityid/3,massachusetts:stateid/2],[massive:mountainid/2,usa:countryid/2],[san jose_ca:cityid/3,california:stateid/2],[kit carson:mountainid/2,colorado:stateid/2],[lake of the woods:lakeid/2,minnesota:stateid/2],[cincinnati_oh:cityid/3,ohio:stateid/2],[duval circle_dc:cityid/3,district of columbia:stateid/2],[burlington_vt:cityid/3,vermont:stateid/2],[pacific ocean:placeid/2,hawaii:stateid/2],[lake charles_la:cityid/3,louisiana:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[sioux city_ia:cityid/3,usa:countryid/2],[naknek:lakeid/2,usa:countryid/2],[newport news_va:cityid/3,virginia:stateid/2],[flathead:lakeid/2,usa:countryid/2],[kansas city_mo:cityid/3,missouri:stateid/2],[santa fe_nm:cityid/3,usa:countryid/2],[greenwich_ct:cityid/3,connecticut:stateid/2],[hollywood_fl:cityid/3,usa:countryid/2],[red bluff reservoir:placeid/2,usa:countryid/2],[springfield_il:cityid/3,usa:countryid/2],[mississippi:riverid/2,minnesota:stateid/2],[tacoma_wa:cityid/3,washington:stateid/2],[lawton_ok:cityid/3,usa:countryid/2],[southfield_mi:cityid/3,usa:countryid/2],[miami_fl:cityid/3,florida:stateid/2],[alhambra_ca:cityid/3,usa:countryid/2],[raleigh_nc:cityid/3,north carolina:stateid/2],[waterloo_ia:cityid/3,iowa:stateid/2],[campbell hill:placeid/2,ohio:stateid/2],[citrus heights_ca:cityid/3,california:stateid/2],[butte_mt:cityid/3,montana:stateid/2],[lynn_ma:cityid/3,usa:countryid/2],[white:riverid/2,arkansas:stateid/2],[aberdeen_sd:cityid/3,south dakota:stateid/2],[norfolk_va:cityid/3,usa:countryid/2],[hayward_ca:cityid/3,usa:countryid/2],[el monte_ca:cityid/3,california:stateid/2],[stamford_ct:cityid/3,usa:countryid/2],[utah:stateid/2,usa:countryid/2],[atlantic ocean:placeid/2,delaware:stateid/2],[longs:mountainid/2,colorado:stateid/2],[irondequoit_ny:cityid/3,new york:stateid/2],[beaumont_tx:cityid/3,usa:countryid/2],[san juan:riverid/2,colorado:stateid/2],[rapid city_sd:cityid/3,south dakota:stateid/2],[princeton:mountainid/2,colorado:stateid/2],[peoria_il:cityid/3,illinois:stateid/2],[rock springs_wy:cityid/3,usa:countryid/2],[sioux falls_sd:cityid/3,south dakota:stateid/2],[newark_nj:cityid/3,new jersey:stateid/2],[new rochelle_ny:cityid/3,usa:countryid/2],[vancouver:mountainid/2,usa:countryid/2],[atlantic ocean:placeid/2,maryland:stateid/2],[provo_ut:cityid/3,utah:stateid/2],[snake river:placeid/2,idaho:stateid/2],[minnesota:stateid/2,usa:countryid/2],[san leandro_ca:cityid/3,california:stateid/2],[hudson:riverid/2,new york:stateid/2],[bellevue_wa:cityid/3,usa:countryid/2],[burbank_ca:cityid/3,california:stateid/2],[long island sound:placeid/2,usa:countryid/2],[snake:riverid/2,oregon:stateid/2],[high point_nc:cityid/3,north carolina:stateid/2],[raleigh_nc:cityid/3,usa:countryid/2],[ventura_ca:cityid/3,california:stateid/2],[compton_ca:cityid/3,usa:countryid/2],[campbell hill:placeid/2,usa:countryid/2],[albany_ga:cityid/3,usa:countryid/2],[connecticut:riverid/2,usa:countryid/2],[fairweather:mountainid/2,usa:countryid/2],[vancouver:mountainid/2,alaska:stateid/2],[bristol township_pa:cityid/3,usa:countryid/2],[muncie_in:cityid/3,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[miami_fl:cityid/3,usa:countryid/2],[st. petersburg_fl:cityid/3,florida:stateid/2],[iliamna:lakeid/2,usa:countryid/2],[champlain:lakeid/2,usa:countryid/2],[southeast corner:placeid/2,usa:countryid/2],[sacramento_ca:cityid/3,usa:countryid/2],[middletown_nj:cityid/3,usa:countryid/2],[kennedy:mountainid/2,alaska:stateid/2],[spruce knob:placeid/2,west virginia:stateid/2],[long island sound:placeid/2,connecticut:stateid/2],[williamson:mountainid/2,usa:countryid/2],[west allis_wi:cityid/3,wisconsin:stateid/2],[fayetteville_nc:cityid/3,usa:countryid/2],[minneapolis_mn:cityid/3,usa:countryid/2],[sitka_ak:cityid/3,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[modesto_ca:cityid/3,usa:countryid/2],[torreys:mountainid/2,colorado:stateid/2],[pasadena_ca:cityid/3,california:stateid/2],[antero:mountainid/2,colorado:stateid/2],[st. francis:riverid/2,usa:countryid/2],[vallejo_ca:cityid/3,california:stateid/2],[portsmouth_va:cityid/3,virginia:stateid/2],[bennington_vt:cityid/3,usa:countryid/2],[erie:lakeid/2,michigan:stateid/2],[eugene_or:cityid/3,oregon:stateid/2],[plano_tx:cityid/3,texas:stateid/2],[norwalk_ca:cityid/3,usa:countryid/2],[hamilton_oh:cityid/3,usa:countryid/2],[springfield_mo:cityid/3,usa:countryid/2],[massive:mountainid/2,colorado:stateid/2],[norfolk_va:cityid/3,virginia:stateid/2],[uncompahgre:mountainid/2,usa:countryid/2],[independence_mo:cityid/3,usa:countryid/2],[driskill mountain:placeid/2,louisiana:stateid/2],[san francisco_ca:cityid/3,california:stateid/2],[mount marcy:placeid/2,new york:stateid/2],[washington_dc:cityid/3,usa:countryid/2],[bangor_me:cityid/3,usa:countryid/2],[salem_or:cityid/3,oregon:stateid/2],[skokie_il:cityid/3,illinois:stateid/2],[quandary:mountainid/2,usa:countryid/2],[black mountain:placeid/2,kentucky:stateid/2],[downey_ca:cityid/3,california:stateid/2],[sterling heights_mi:cityid/3,michigan:stateid/2],[champaign_il:cityid/3,illinois:stateid/2],[harvard:mountainid/2,usa:countryid/2],[salem_or:cityid/3,usa:countryid/2],[baton rouge_la:cityid/3,louisiana:stateid/2],[washita:riverid/2,oklahoma:stateid/2],[north platte_ne:cityid/3,nebraska:stateid/2],[west valley_ut:cityid/3,utah:stateid/2],[lakewood_co:cityid/3,colorado:stateid/2],[watertown_sd:cityid/3,usa:countryid/2],[woodall mountain:placeid/2,mississippi:stateid/2],[san jose_ca:cityid/3,usa:countryid/2],[irondequoit_ny:cityid/3,usa:countryid/2],[mountain view_ca:cityid/3,california:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[black mesa:placeid/2,usa:countryid/2],[mauna kea:placeid/2,usa:countryid/2],[burlington_vt:cityid/3,usa:countryid/2],[greenville_sc:cityid/3,usa:countryid/2],[jacksonville_fl:cityid/3,usa:countryid/2],[boston_ma:cityid/3,massachusetts:stateid/2],[seattle_wa:cityid/3,washington:stateid/2],[ventura_ca:cityid/3,usa:countryid/2],[lawrence_ma:cityid/3,usa:countryid/2],[ohio:riverid/2,kentucky:stateid/2],[westminster_ca:cityid/3,usa:countryid/2],[alverstone:mountainid/2,usa:countryid/2],[livonia_mi:cityid/3,usa:countryid/2],[winston-salem_nc:cityid/3,north carolina:stateid/2],[richmond_ca:cityid/3,california:stateid/2],[kootenai river:placeid/2,montana:stateid/2],[tempe_az:cityid/3,arizona:stateid/2],[irvine_ca:cityid/3,usa:countryid/2],[parma_oh:cityid/3,ohio:stateid/2],[pocatello_id:cityid/3,usa:countryid/2],[west allis_wi:cityid/3,usa:countryid/2],[mississippi river:placeid/2,kentucky:stateid/2],[st. clair:lakeid/2,usa:countryid/2],[pearl:riverid/2,michigan:stateid/2],[tempe_az:cityid/3,usa:countryid/2],[hampton_va:cityid/3,usa:countryid/2],[southfield_mi:cityid/3,michigan:stateid/2],[arlington_va:cityid/3,usa:countryid/2],[mount rainier:placeid/2,usa:countryid/2],[tahoe:lakeid/2,usa:countryid/2],[greensboro_nc:cityid/3,usa:countryid/2],[mount curwood:placeid/2,usa:countryid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[atlantic ocean:placeid/2,georgia:stateid/2],[bristol township_pa:cityid/3,pennsylvania:stateid/2],[stockton_ca:cityid/3,california:stateid/2],[troy_mi:cityid/3,michigan:stateid/2],[south carolina:stateid/2,usa:countryid/2],[el diente:mountainid/2,colorado:stateid/2],[joliet_il:cityid/3,illinois:stateid/2],[biloxi_ms:cityid/3,usa:countryid/2],[lowell_ma:cityid/3,usa:countryid/2],[clingmans dome:placeid/2,usa:countryid/2],[fairbanks_ak:cityid/3,usa:countryid/2],[el paso_tx:cityid/3,texas:stateid/2],[lawrence_ma:cityid/3,massachusetts:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[springfield_oh:cityid/3,ohio:stateid/2],[erie:lakeid/2,new york:stateid/2],[frankfort_ky:cityid/3,kentucky:stateid/2],[erie_pa:cityid/3,usa:countryid/2],[pennsylvania:stateid/2,usa:countryid/2],[death valley:placeid/2,california:stateid/2],[el diente:mountainid/2,usa:countryid/2],[connecticut:riverid/2,massachusetts:stateid/2],[great falls_mt:cityid/3,montana:stateid/2],[levittown_ny:cityid/3,new york:stateid/2],[wyoming:stateid/2,usa:countryid/2],[south platte:riverid/2,nebraska:stateid/2],[anderson_in:cityid/3,indiana:stateid/2],[boundary peak:placeid/2,nevada:stateid/2],[uncompahgre:mountainid/2,colorado:stateid/2],[lake erie:placeid/2,michigan:stateid/2],[guadalupe peak:placeid/2,texas:stateid/2],[overland park_ks:cityid/3,kansas:stateid/2],[chicago_il:cityid/3,illinois:stateid/2],[wahiawa_hi:cityid/3,hawaii:stateid/2],[st. clair:lakeid/2,michigan:stateid/2],[pocatello_id:cityid/3,idaho:stateid/2],[castle:mountainid/2,colorado:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[san bernardino_ca:cityid/3,california:stateid/2],[kettering_oh:cityid/3,ohio:stateid/2],[sunrise manor_nv:cityid/3,usa:countryid/2],[pontiac_mi:cityid/3,michigan:stateid/2],[south bend_in:cityid/3,usa:countryid/2],[mount vernon_ny:cityid/3,usa:countryid/2],[quandary:mountainid/2,colorado:stateid/2],[brookside_de:cityid/3,usa:countryid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[san mateo_ca:cityid/3,california:stateid/2],[newton_ma:cityid/3,massachusetts:stateid/2],[hamilton_oh:cityid/3,ohio:stateid/2],[evans:mountainid/2,colorado:stateid/2],[cranston_ri:cityid/3,rhode island:stateid/2],[williamson:mountainid/2,california:stateid/2],[manchester_nh:cityid/3,usa:countryid/2],[longs:mountainid/2,usa:countryid/2],[new orleans:placeid/2,louisiana:stateid/2],[bianca:mountainid/2,usa:countryid/2],[santa monica_ca:cityid/3,usa:countryid/2],[east buttress:mountainid/2,alaska:stateid/2],[columbia:riverid/2,washington:stateid/2],[pasadena_tx:cityid/3,usa:countryid/2],[bismarck_nd:cityid/3,north dakota:stateid/2],[blackburn:mountainid/2,usa:countryid/2],[dearborn_mi:cityid/3,michigan:stateid/2],[great salt lake:lakeid/2,utah:stateid/2],[arvada_co:cityid/3,colorado:stateid/2],[colorado:stateid/2,usa:countryid/2],[framingham_ma:cityid/3,usa:countryid/2],[hawaii:stateid/2,usa:countryid/2],[borah peak:placeid/2,idaho:stateid/2],[bethesda_md:cityid/3,usa:countryid/2],[michigan:lakeid/2,usa:countryid/2],[san angelo_tx:cityid/3,texas:stateid/2],[seattle_wa:cityid/3,usa:countryid/2],[glendale_ca:cityid/3,california:stateid/2],[alexandria_va:cityid/3,usa:countryid/2],[columbia:riverid/2,usa:countryid/2],[duval circle_dc:cityid/3,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[portland_or:cityid/3,usa:countryid/2],[oak lawn_il:cityid/3,usa:countryid/2],[racine_wi:cityid/3,wisconsin:stateid/2],[beaver dam creek:placeid/2,utah:stateid/2],[cheyenne_wy:cityid/3,usa:countryid/2],[evanston_il:cityid/3,usa:countryid/2],[dubuque_ia:cityid/3,iowa:stateid/2],[huntington_wv:cityid/3,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[plano_tx:cityid/3,usa:countryid/2],[san juan:riverid/2,new mexico:stateid/2],[buffalo_ny:cityid/3,usa:countryid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[mount hood:placeid/2,usa:countryid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[lincoln:mountainid/2,usa:countryid/2],[wheeling_wv:cityid/3,west virginia:stateid/2],[red:riverid/2,usa:countryid/2],[harrisburg_pa:cityid/3,pennsylvania:stateid/2],[virginia:stateid/2,usa:countryid/2],[pueblo_co:cityid/3,colorado:stateid/2],[pacific ocean:placeid/2,alaska:stateid/2],[ontario:lakeid/2,usa:countryid/2],[arizona:stateid/2,usa:countryid/2],[scranton_pa:cityid/3,usa:countryid/2],[albany_ny:cityid/3,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[tahoe:lakeid/2,nevada:stateid/2],[hunter:mountainid/2,usa:countryid/2],[corpus christi_tx:cityid/3,usa:countryid/2],[humphreys peak:placeid/2,usa:countryid/2],[atlanta_ga:cityid/3,usa:countryid/2],[west palm beach_fl:cityid/3,usa:countryid/2],[columbus_ga:cityid/3,georgia:stateid/2],[evansville_in:cityid/3,usa:countryid/2],[hudson:riverid/2,new jersey:stateid/2],[duluth_mn:cityid/3,usa:countryid/2],[newport news_va:cityid/3,usa:countryid/2],[princeton:mountainid/2,usa:countryid/2],[st. clair shores_mi:cityid/3,michigan:stateid/2],[huntsville_al:cityid/3,usa:countryid/2],[red:riverid/2,oklahoma:stateid/2],[nashville_tn:cityid/3,usa:countryid/2],[augusta_me:cityid/3,maine:stateid/2],[aurora_il:cityid/3,illinois:stateid/2],[scottsdale_az:cityid/3,arizona:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[snake river:placeid/2,usa:countryid/2],[new mexico:stateid/2,usa:countryid/2],[roswell_nm:cityid/3,usa:countryid/2],[trenton_nj:cityid/3,new jersey:stateid/2],[bross:mountainid/2,usa:countryid/2],[tombigbee:riverid/2,usa:countryid/2],[amarillo_tx:cityid/3,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[norwalk_ca:cityid/3,california:stateid/2],[mobile_al:cityid/3,usa:countryid/2],[waterbury_ct:cityid/3,usa:countryid/2],[beaver dam creek:placeid/2,usa:countryid/2],[east los angeles_ca:cityid/3,california:stateid/2],[lewiston_me:cityid/3,maine:stateid/2],[iliamna:lakeid/2,alaska:stateid/2],[san angelo_tx:cityid/3,usa:countryid/2],[lake superior:placeid/2,usa:countryid/2],[santa ana_ca:cityid/3,usa:countryid/2],[illinois:stateid/2,usa:countryid/2],[santa barbara_ca:cityid/3,california:stateid/2],[nashville_tn:cityid/3,tennessee:stateid/2],[durham_nc:cityid/3,north carolina:stateid/2],[westland_mi:cityid/3,usa:countryid/2],[clifton_nj:cityid/3,usa:countryid/2],[terre haute_in:cityid/3,indiana:stateid/2],[bona:mountainid/2,alaska:stateid/2],[erie:lakeid/2,usa:countryid/2],[sanford:mountainid/2,usa:countryid/2],[cleveland_oh:cityid/3,ohio:stateid/2],[tallahassee_fl:cityid/3,usa:countryid/2],[downey_ca:cityid/3,usa:countryid/2],[ewa_hi:cityid/3,usa:countryid/2],[savannah_ga:cityid/3,georgia:stateid/2],[denver_co:cityid/3,usa:countryid/2],[wisconsin:stateid/2,usa:countryid/2],[potomac river:placeid/2,usa:countryid/2],[la plata:mountainid/2,usa:countryid/2],[pawtucket_ri:cityid/3,rhode island:stateid/2],[las cruces_nm:cityid/3,new mexico:stateid/2],[jacksonville_fl:cityid/3,florida:stateid/2],[mesa_az:cityid/3,usa:countryid/2],[inglewood_ca:cityid/3,usa:countryid/2],[powder:riverid/2,wyoming:stateid/2],[lewiston_me:cityid/3,usa:countryid/2],[jersey city_nj:cityid/3,usa:countryid/2],[wilmington_de:cityid/3,delaware:stateid/2],[redondo beach_ca:cityid/3,usa:countryid/2],[aberdeen_sd:cityid/3,usa:countryid/2],[allentown_pa:cityid/3,pennsylvania:stateid/2],[odessa_tx:cityid/3,usa:countryid/2],[decatur_il:cityid/3,illinois:stateid/2],[tennessee:stateid/2,usa:countryid/2],[wyoming_mi:cityid/3,michigan:stateid/2],[ohio river:placeid/2,ohio:stateid/2],[san juan:riverid/2,utah:stateid/2],[foraker:mountainid/2,alaska:stateid/2],[columbia_mo:cityid/3,usa:countryid/2],[livonia_mi:cityid/3,michigan:stateid/2],[ann arbor_mi:cityid/3,michigan:stateid/2],[warwick_ri:cityid/3,usa:countryid/2],[el monte_ca:cityid/3,usa:countryid/2],[rochester_ny:cityid/3,new york:stateid/2],[elizabeth_nj:cityid/3,usa:countryid/2],[winnebago:lakeid/2,usa:countryid/2],[tulsa_ok:cityid/3,usa:countryid/2],[rockford_il:cityid/3,illinois:stateid/2],[los angeles_ca:cityid/3,california:stateid/2],[el cajon_ca:cityid/3,california:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[grand forks_nd:cityid/3,north dakota:stateid/2],[dearborn heights_mi:cityid/3,usa:countryid/2],[lower merion_pa:cityid/3,pennsylvania:stateid/2],[columbia_mo:cityid/3,missouri:stateid/2],[st. louis_mo:cityid/3,missouri:stateid/2],[reading_pa:cityid/3,pennsylvania:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[waterford_mi:cityid/3,usa:countryid/2],[waterloo_ia:cityid/3,usa:countryid/2],[grand forks_nd:cityid/3,usa:countryid/2],[evans:mountainid/2,usa:countryid/2],[orlando_fl:cityid/3,usa:countryid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[west palm beach_fl:cityid/3,florida:stateid/2],[cambridge_ma:cityid/3,massachusetts:stateid/2],[carson city_nv:cityid/3,nevada:stateid/2],[hartford_ct:cityid/3,usa:countryid/2],[fort worth_tx:cityid/3,texas:stateid/2],[colorado springs_co:cityid/3,usa:countryid/2],[oklahoma:stateid/2,usa:countryid/2],[indianapolis_in:cityid/3,indiana:stateid/2],[largo_fl:cityid/3,florida:stateid/2],[harney peak:placeid/2,usa:countryid/2],[jefferson city_mo:cityid/3,missouri:stateid/2],[roanoke_va:cityid/3,virginia:stateid/2],[garden grove_ca:cityid/3,california:stateid/2],[gulf of mexico:placeid/2,usa:countryid/2],[wateree catawba:riverid/2,usa:countryid/2],[boise_id:cityid/3,idaho:stateid/2],[minot_nd:cityid/3,usa:countryid/2],[bloomington_mn:cityid/3,minnesota:stateid/2],[scotts valley_ca:cityid/3,usa:countryid/2],[aurora_co:cityid/3,colorado:stateid/2],[rock:riverid/2,wisconsin:stateid/2],[crestone needle:mountainid/2,colorado:stateid/2],[hunter:mountainid/2,alaska:stateid/2],[abingdon_pa:cityid/3,usa:countryid/2],[sill:mountainid/2,usa:countryid/2],[rainier:mountainid/2,washington:stateid/2],[gannett peak:placeid/2,wyoming:stateid/2],[georgetown_dc:cityid/3,district of columbia:stateid/2],[virginia beach_va:cityid/3,virginia:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:stateid/2,usa:countryid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[michigan:lakeid/2,michigan:stateid/2],[montana:stateid/2,usa:countryid/2],[medford_ma:cityid/3,usa:countryid/2],[oakland_ca:cityid/3,usa:countryid/2],[albuquerque_nm:cityid/3,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[dundalk_md:cityid/3,maryland:stateid/2],[utica_ny:cityid/3,new york:stateid/2],[albany_ny:cityid/3,new york:stateid/2],[belford:mountainid/2,usa:countryid/2],[lubbock_tx:cityid/3,texas:stateid/2],[elgin_il:cityid/3,usa:countryid/2],[amarillo_tx:cityid/3,texas:stateid/2],[houston_tx:cityid/3,texas:stateid/2],[elgin_il:cityid/3,illinois:stateid/2],[timms hill:placeid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mount marcy:placeid/2,usa:countryid/2],[la plata:mountainid/2,colorado:stateid/2],[hartford_ct:cityid/3,connecticut:stateid/2],[skokie_il:cityid/3,usa:countryid/2],[laramie_wy:cityid/3,usa:countryid/2],[joliet_il:cityid/3,usa:countryid/2],[cheaha mountain:placeid/2,alabama:stateid/2],[tenleytown:placeid/2,district of columbia:stateid/2],[springfield_il:cityid/3,illinois:stateid/2],[fresno_ca:cityid/3,usa:countryid/2],[naknek:lakeid/2,alaska:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[san bernardino_ca:cityid/3,usa:countryid/2],[hollywood_fl:cityid/3,florida:stateid/2],[bethlehem_pa:cityid/3,pennsylvania:stateid/2],[san antonio_tx:cityid/3,usa:countryid/2],[parkersburg_wv:cityid/3,usa:countryid/2],[hubbard:mountainid/2,alaska:stateid/2],[newark_de:cityid/3,usa:countryid/2],[grays:mountainid/2,usa:countryid/2],[chicago_il:cityid/3,usa:countryid/2],[brownsville_tx:cityid/3,usa:countryid/2],[mount rogers:placeid/2,virginia:stateid/2],[new rochelle_ny:cityid/3,new york:stateid/2],[lakewood_co:cityid/3,usa:countryid/2],[newport beach_ca:cityid/3,california:stateid/2],[providence_ri:cityid/3,rhode island:stateid/2],[des moines_ia:cityid/3,iowa:stateid/2],[santa rosa_ca:cityid/3,california:stateid/2],[ontario:lakeid/2,new york:stateid/2],[mississippi river:placeid/2,usa:countryid/2],[franklin township:placeid/2,usa:countryid/2],[bakersfield_ca:cityid/3,usa:countryid/2],[greensboro_nc:cityid/3,north carolina:stateid/2],[colorado river:placeid/2,arizona:stateid/2],[great salt lake:lakeid/2,usa:countryid/2],[rhode island:stateid/2,usa:countryid/2],[arkansas:riverid/2,kansas:stateid/2],[brownsville_tx:cityid/3,texas:stateid/2],[fort collins_co:cityid/3,usa:countryid/2],[richmond_ca:cityid/3,usa:countryid/2],[penn hills_pa:cityid/3,usa:countryid/2],[virginia beach_va:cityid/3,usa:countryid/2],[louisiana:stateid/2,usa:countryid/2],[mount davis:placeid/2,pennsylvania:stateid/2],[shasta:mountainid/2,usa:countryid/2],[rochester_ny:cityid/3,usa:countryid/2],[nevada:stateid/2,usa:countryid/2],[gary_in:cityid/3,indiana:stateid/2],[colorado river:placeid/2,nevada:stateid/2],[castle:mountainid/2,usa:countryid/2],[death valley:placeid/2,usa:countryid/2],[roanoke_va:cityid/3,usa:countryid/2],[oxnard_ca:cityid/3,california:stateid/2],[snake:riverid/2,idaho:stateid/2],[oceanside_ca:cityid/3,california:stateid/2],[north platte_ne:cityid/3,usa:countryid/2],[colorado:riverid/2,utah:stateid/2],[pasadena_tx:cityid/3,texas:stateid/2],[mount mckinley:placeid/2,usa:countryid/2],[ouachita river:placeid/2,usa:countryid/2],[south bend_in:cityid/3,indiana:stateid/2],[westland_mi:cityid/3,michigan:stateid/2],[baltimore_md:cityid/3,maryland:stateid/2],[aurora_il:cityid/3,usa:countryid/2],[woodall mountain:placeid/2,usa:countryid/2],[irving_tx:cityid/3,usa:countryid/2],[schenectady_ny:cityid/3,usa:countryid/2],[elizabeth_nj:cityid/3,new jersey:stateid/2],[longview_tx:cityid/3,usa:countryid/2],[ohio:riverid/2,illinois:stateid/2],[missoula_mt:cityid/3,montana:stateid/2],[spruce knob:placeid/2,usa:countryid/2],[west virginia:stateid/2,usa:countryid/2],[cheektowaga_ny:cityid/3,usa:countryid/2],[pecos:riverid/2,usa:countryid/2],[gulf of mexico:placeid/2,alabama:stateid/2],[oregon:stateid/2,usa:countryid/2],[pawtucket_ri:cityid/3,usa:countryid/2],[grays:mountainid/2,colorado:stateid/2],[backbone mountain:placeid/2,usa:countryid/2],[houston_tx:cityid/3,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[redford_mi:cityid/3,usa:countryid/2],[oklahoma city_ok:cityid/3,usa:countryid/2],[driskill mountain:placeid/2,usa:countryid/2],[new orleans_la:cityid/3,louisiana:stateid/2],[huntington beach_ca:cityid/3,california:stateid/2],[becharof:lakeid/2,alaska:stateid/2],[monroe_la:cityid/3,louisiana:stateid/2],[lafayette_la:cityid/3,louisiana:stateid/2],[west hartford_ct:cityid/3,connecticut:stateid/2],[sunnyvale_ca:cityid/3,usa:countryid/2],[santa clara_ca:cityid/3,california:stateid/2],[sterling heights_mi:cityid/3,usa:countryid/2],[ohio river:placeid/2,usa:countryid/2],[appleton_wi:cityid/3,wisconsin:stateid/2],[fullerton_ca:cityid/3,california:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[lakewood_oh:cityid/3,ohio:stateid/2],[yellowstone:riverid/2,wyoming:stateid/2],[chattanooga_tn:cityid/3,usa:countryid/2],[essex_vt:cityid/3,usa:countryid/2],[whitney:mountainid/2,california:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[wheeling_wv:cityid/3,usa:countryid/2],[dundalk_md:cityid/3,usa:countryid/2],[redondo beach_ca:cityid/3,california:stateid/2],[san francisco_ca:cityid/3,usa:countryid/2],[johnson township:placeid/2,usa:countryid/2],[lake of the woods:lakeid/2,usa:countryid/2],[santa clara_ca:cityid/3,usa:countryid/2],[mount frissell:placeid/2,connecticut:stateid/2],[lorain_oh:cityid/3,ohio:stateid/2],[st. elias:mountainid/2,usa:countryid/2],[mount whitney:placeid/2,california:stateid/2],[mountain view_ca:cityid/3,usa:countryid/2],[atlantic ocean:placeid/2,new jersey:stateid/2],[midland_tx:cityid/3,usa:countryid/2],[kansas city_mo:cityid/3,usa:countryid/2],[lake michigan:placeid/2,wisconsin:stateid/2],[richmond_va:cityid/3,usa:countryid/2],[arlington_va:cityid/3,virginia:stateid/2],[wichita_ks:cityid/3,usa:countryid/2],[tacoma_wa:cityid/3,usa:countryid/2],[pensacola_fl:cityid/3,usa:countryid/2],[colorado river:placeid/2,usa:countryid/2],[salinas_ca:cityid/3,usa:countryid/2],[upper darby_pa:cityid/3,pennsylvania:stateid/2],[gary_in:cityid/3,usa:countryid/2],[milwaukee_wi:cityid/3,usa:countryid/2],[waltham_ma:cityid/3,massachusetts:stateid/2],[salton sea:lakeid/2,california:stateid/2],[edison_nj:cityid/3,usa:countryid/2],[massachusetts:stateid/2,usa:countryid/2],[anaheim_ca:cityid/3,usa:countryid/2],[jerimoth hill:placeid/2,rhode island:stateid/2],[arkansas:stateid/2,usa:countryid/2],[charlotte_nc:cityid/3,north carolina:stateid/2],[irvington_nj:cityid/3,new jersey:stateid/2],[lake charles_la:cityid/3,usa:countryid/2],[bethesda_md:cityid/3,maryland:stateid/2],[irving_tx:cityid/3,texas:stateid/2],[flint_mi:cityid/3,michigan:stateid/2],[bona:mountainid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[yale:mountainid/2,usa:countryid/2],[worcester_ma:cityid/3,massachusetts:stateid/2],[midland_tx:cityid/3,texas:stateid/2],[scottsdale_az:cityid/3,usa:countryid/2],[fall river_ma:cityid/3,usa:countryid/2],[pittsburgh_pa:cityid/3,usa:countryid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[st. francis river:placeid/2,missouri:stateid/2],[north charleston_sc:cityid/3,usa:countryid/2],[mille lacs:lakeid/2,usa:countryid/2],[ouachita:riverid/2,usa:countryid/2],[minneapolis_mn:cityid/3,minnesota:stateid/2],[covington_ky:cityid/3,usa:countryid/2],[bakersfield_ca:cityid/3,california:stateid/2],[columbia_sc:cityid/3,usa:countryid/2],[black mountain:placeid/2,usa:countryid/2],[south dakota:stateid/2,usa:countryid/2],[whittier_ca:cityid/3,usa:countryid/2],[wahiawa_hi:cityid/3,usa:countryid/2],[auburn_me:cityid/3,maine:stateid/2],[taum sauk mountain:placeid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[jerimoth hill:placeid/2,usa:countryid/2],[mount elbert:placeid/2,colorado:stateid/2],[orange_ca:cityid/3,usa:countryid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[lincoln_ne:cityid/3,usa:countryid/2],[odessa_tx:cityid/3,texas:stateid/2],[white:riverid/2,missouri:stateid/2],[ontario_ca:cityid/3,california:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[whittier_ca:cityid/3,california:stateid/2],[garland_tx:cityid/3,usa:countryid/2],[brookside_de:cityid/3,delaware:stateid/2],[alameda_ca:cityid/3,usa:countryid/2],[kansas city_ks:cityid/3,kansas:stateid/2],[rutland_vt:cityid/3,usa:countryid/2],[ouachita:riverid/2,arkansas:stateid/2],[atlantic ocean:placeid/2,maine:stateid/2],[long beach_ca:cityid/3,california:stateid/2],[colorado springs_co:cityid/3,colorado:stateid/2],[manchester_nh:cityid/3,new hampshire:stateid/2],[pomona_ca:cityid/3,usa:countryid/2],[mount mitchell:placeid/2,usa:countryid/2],[fairweather:mountainid/2,alaska:stateid/2],[owensboro_ky:cityid/3,kentucky:stateid/2],[potomac river:placeid/2,west virginia:stateid/2],[jersey city_nj:cityid/3,new jersey:stateid/2],[crestone needle:mountainid/2,usa:countryid/2],[pasadena_ca:cityid/3,usa:countryid/2],[alverstone:mountainid/2,alaska:stateid/2],[springfield_mo:cityid/3,missouri:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[delaware:stateid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[westminster_ca:cityid/3,california:stateid/2],[kansas city_ks:cityid/3,usa:countryid/2],[clearwater_fl:cityid/3,usa:countryid/2],[orlando_fl:cityid/3,florida:stateid/2],[texas:stateid/2,usa:countryid/2],[corpus christi_tx:cityid/3,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[elbert:mountainid/2,colorado:stateid/2],[cheyenne:riverid/2,north dakota:stateid/2],[oklahoma city_ok:cityid/3,oklahoma:stateid/2],[sioux falls_sd:cityid/3,usa:countryid/2],[tenleytown_dc:cityid/3,usa:countryid/2],[district of columbia:stateid/2,usa:countryid/2]}:{[placeid/2,countryid/2],[placeid/2,stateid/2],[cityid/3,countryid/2],[riverid/2,stateid/2],[placeid/2,cityid/3],[mountainid/2,countryid/2],[stateid/2,countryid/2],[lakeid/2,countryid/2],[mountainid/2,stateid/2],[cityid/3,stateid/2],[riverid/2,countryid/2],[lakeid/2,stateid/2]}[1] and {..}:{[date,date,cityid/3],[money,money,cityid/3],[length,length,cityid/3],[count/length^2,count/length^2,cityid/3],[money/time_duration,money/time_duration,cityid/3],[date_month,date_month,cityid/3],[time_duration,time_duration,cityid/3],[frac,frac,cityid/3],[name,name,cityid/3],[rank,rank,cityid/3],[date_year,date_year,cityid/3],[date_day,date_day,cityid/3],[date_time,date_time,cityid/3],[count,count,cityid/3],[length^2,length^2,cityid/3]}[0] => {}:error]} | answer(A,(loc(B,A),const(B,cityid(rochester,_)),loc(B,cityid(rochester,_)),loc(A,cityid(A,_))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:425: query => {[iowa:stateid/2],[wisconsin:stateid/2],[kentucky:stateid/2],[indiana:stateid/2],[missouri:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(illinois))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:426: query => {[947200count]} | answer(A,(population(B,A),const(B,stateid('rhode island'))))
        Example tmpgr210hsl.dlog:427: query => {[76685count]} | answer(A,(population(B,A),const(B,cityid(boulder,_))))
        Example tmpgr210hsl.dlog:428: query => {[san angelo_tx:cityid/3],[richardson_tx:cityid/3],[lubbock_tx:cityid/3],[amarillo_tx:cityid/3],[grand prairie_tx:cityid/3],[fort worth_tx:cityid/3],[houston_tx:cityid/3],[waco_tx:cityid/3],[beaumont_tx:cityid/3],[corpus christi_tx:cityid/3],[longview_tx:cityid/3],[arlington_tx:cityid/3],[irving_tx:cityid/3],[brownsville_tx:cityid/3],[mesquite_tx:cityid/3],[pasadena_tx:cityid/3],[austin_tx:cityid/3],[wichita falls_tx:cityid/3],[laredo_tx:cityid/3],[el paso_tx:cityid/3],[mcallen_tx:cityid/3],[abilene_tx:cityid/3],[garland_tx:cityid/3],[plano_tx:cityid/3],[odessa_tx:cityid/3],[dallas_tx:cityid/3],[midland_tx:cityid/3],[port arthur_tx:cityid/3],[san antonio_tx:cityid/3],[tyler_tx:cityid/3]} | answer(A,(city(A),loc(A,B),const(B,stateid(texas))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:429: query => {[ohio:stateid/2],[indiana:stateid/2],[wisconsin:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(michigan))))
        Example tmpgr210hsl.dlog:430: query => {[alaska:stateid/2]} | answer(A,largest(A,largest(A,state(A))))
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:434: query => {[Join failed syntactically: {[ohio:riverid/2,west virginia:stateid/2],[wabash:riverid/2,indiana:stateid/2],[smoky hill:riverid/2,colorado:stateid/2],[tennessee:riverid/2,usa:countryid/2],[niobrara:riverid/2,nebraska:stateid/2],[canadian:riverid/2,usa:countryid/2],[neosho:riverid/2,oklahoma:stateid/2],[green:riverid/2,wyoming:stateid/2],[colorado:riverid/2,nevada:stateid/2],[pecos:riverid/2,new mexico:stateid/2],[san juan:riverid/2,usa:countryid/2],[little missouri:riverid/2,south dakota:stateid/2],[rio grande:riverid/2,usa:countryid/2],[rock:riverid/2,usa:countryid/2],[missouri:riverid/2,montana:stateid/2],[colorado:riverid/2,california:stateid/2],[pearl:riverid/2,usa:countryid/2],[gila:riverid/2,arizona:stateid/2],[green:riverid/2,utah:stateid/2],[arkansas:riverid/2,usa:countryid/2],[tombigbee:riverid/2,mississippi:stateid/2],[potomac:riverid/2,maryland:stateid/2],[snake:riverid/2,usa:countryid/2],[roanoke:riverid/2,north carolina:stateid/2],[missouri:riverid/2,north dakota:stateid/2],[little missouri:riverid/2,wyoming:stateid/2],[washita:riverid/2,texas:stateid/2],[little missouri:riverid/2,north dakota:stateid/2],[neosho:riverid/2,kansas:stateid/2],[missouri:riverid/2,south dakota:stateid/2],[cimarron:riverid/2,kansas:stateid/2],[potomac:riverid/2,west virginia:stateid/2],[connecticut:riverid/2,new hampshire:stateid/2],[powder:riverid/2,usa:countryid/2],[canadian:riverid/2,new mexico:stateid/2],[colorado:riverid/2,usa:countryid/2],[canadian:riverid/2,colorado:stateid/2],[little missouri:riverid/2,usa:countryid/2],[yellowstone:riverid/2,north dakota:stateid/2],[republican:riverid/2,usa:countryid/2],[cumberland:riverid/2,usa:countryid/2],[ohio:riverid/2,usa:countryid/2],[missouri:riverid/2,missouri:stateid/2],[cumberland:riverid/2,kentucky:stateid/2],[powder:riverid/2,montana:stateid/2],[south platte:riverid/2,colorado:stateid/2],[arkansas:riverid/2,colorado:stateid/2],[north platte:riverid/2,nebraska:stateid/2],[republican:riverid/2,colorado:stateid/2],[little missouri:riverid/2,montana:stateid/2],[red:riverid/2,arkansas:stateid/2],[mississippi:riverid/2,illinois:stateid/2],[roanoke:riverid/2,virginia:stateid/2],[north platte:riverid/2,colorado:stateid/2],[allegheny:riverid/2,usa:countryid/2],[ohio:riverid/2,indiana:stateid/2],[niobrara:riverid/2,wyoming:stateid/2],[republican:riverid/2,kansas:stateid/2],[gila:riverid/2,usa:countryid/2],[tennessee:riverid/2,kentucky:stateid/2],[canadian:riverid/2,oklahoma:stateid/2],[red:riverid/2,new mexico:stateid/2],[missouri:riverid/2,usa:countryid/2],[bighorn:riverid/2,montana:stateid/2],[republican:riverid/2,nebraska:stateid/2],[neosho:riverid/2,usa:countryid/2],[cheyenne:riverid/2,wyoming:stateid/2],[red:riverid/2,texas:stateid/2],[delaware:riverid/2,pennsylvania:stateid/2],[columbia:riverid/2,oregon:stateid/2],[niobrara:riverid/2,usa:countryid/2],[white:riverid/2,usa:countryid/2],[gila:riverid/2,new mexico:stateid/2],[potomac:riverid/2,virginia:stateid/2],[snake:riverid/2,wyoming:stateid/2],[roanoke:riverid/2,usa:countryid/2],[north platte:riverid/2,usa:countryid/2],[colorado:riverid/2,arizona:stateid/2],[bighorn:riverid/2,usa:countryid/2],[mississippi:riverid/2,missouri:stateid/2],[tombigbee:riverid/2,alabama:stateid/2],[chattahoochee:riverid/2,usa:countryid/2],[yellowstone:riverid/2,montana:stateid/2],[delaware:riverid/2,usa:countryid/2],[dakota:riverid/2,north dakota:stateid/2],[green:riverid/2,colorado:stateid/2],[dakota:riverid/2,usa:countryid/2],[delaware:riverid/2,new york:stateid/2],[dakota:riverid/2,south dakota:stateid/2],[potomac:riverid/2,usa:countryid/2],[cimarron:riverid/2,usa:countryid/2],[missouri:riverid/2,iowa:stateid/2],[rio grande:riverid/2,new mexico:stateid/2],[ohio:riverid/2,ohio:stateid/2],[rock:riverid/2,illinois:stateid/2],[washita:riverid/2,usa:countryid/2],[arkansas:riverid/2,arkansas:stateid/2],[colorado:riverid/2,colorado:stateid/2],[mississippi:riverid/2,tennessee:stateid/2],[wabash:riverid/2,ohio:stateid/2],[smoky hill:riverid/2,kansas:stateid/2],[wateree catawba:riverid/2,south carolina:stateid/2],[arkansas:riverid/2,oklahoma:stateid/2],[cimarron:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,missouri:stateid/2],[mississippi:riverid/2,minnesota:stateid/2],[white:riverid/2,arkansas:stateid/2],[san juan:riverid/2,colorado:stateid/2],[hudson:riverid/2,new york:stateid/2],[snake:riverid/2,oregon:stateid/2],[connecticut:riverid/2,usa:countryid/2],[red:riverid/2,louisiana:stateid/2],[yellowstone:riverid/2,usa:countryid/2],[clark fork:riverid/2,montana:stateid/2],[st. francis:riverid/2,usa:countryid/2],[washita:riverid/2,oklahoma:stateid/2],[mississippi:riverid/2,arkansas:stateid/2],[ohio:riverid/2,kentucky:stateid/2],[pearl:riverid/2,michigan:stateid/2],[allegheny:riverid/2,pennsylvania:stateid/2],[tennessee:riverid/2,tennessee:stateid/2],[delaware:riverid/2,new jersey:stateid/2],[ouachita:riverid/2,louisiana:stateid/2],[connecticut:riverid/2,massachusetts:stateid/2],[south platte:riverid/2,nebraska:stateid/2],[mississippi:riverid/2,louisiana:stateid/2],[mississippi:riverid/2,kentucky:stateid/2],[allegheny:riverid/2,new york:stateid/2],[columbia:riverid/2,washington:stateid/2],[columbia:riverid/2,usa:countryid/2],[wabash:riverid/2,usa:countryid/2],[rio grande:riverid/2,colorado:stateid/2],[san juan:riverid/2,new mexico:stateid/2],[cimarron:riverid/2,new mexico:stateid/2],[connecticut:riverid/2,connecticut:stateid/2],[north platte:riverid/2,wyoming:stateid/2],[smoky hill:riverid/2,usa:countryid/2],[red:riverid/2,usa:countryid/2],[ohio:riverid/2,pennsylvania:stateid/2],[hudson:riverid/2,new jersey:stateid/2],[red:riverid/2,oklahoma:stateid/2],[st. francis:riverid/2,arkansas:stateid/2],[tombigbee:riverid/2,usa:countryid/2],[chattahoochee:riverid/2,georgia:stateid/2],[colorado:riverid/2,austin_tx:cityid/3],[powder:riverid/2,wyoming:stateid/2],[san juan:riverid/2,utah:stateid/2],[pearl:riverid/2,louisiana:stateid/2],[cumberland:riverid/2,tennessee:stateid/2],[wateree catawba:riverid/2,north carolina:stateid/2],[wateree catawba:riverid/2,usa:countryid/2],[rock:riverid/2,wisconsin:stateid/2],[chattahoochee:riverid/2,florida:stateid/2],[mississippi:riverid/2,mississippi:stateid/2],[mississippi:riverid/2,usa:countryid/2],[mississippi:riverid/2,wisconsin:stateid/2],[bighorn:riverid/2,wyoming:stateid/2],[mississippi:riverid/2,iowa:stateid/2],[arkansas:riverid/2,kansas:stateid/2],[snake:riverid/2,idaho:stateid/2],[colorado:riverid/2,utah:stateid/2],[ohio:riverid/2,illinois:stateid/2],[pecos:riverid/2,usa:countryid/2],[tennessee:riverid/2,alabama:stateid/2],[potomac:riverid/2,district of columbia:stateid/2],[hudson:riverid/2,usa:countryid/2],[yellowstone:riverid/2,wyoming:stateid/2],[cheyenne:riverid/2,usa:countryid/2],[missouri:riverid/2,nebraska:stateid/2],[wabash:riverid/2,illinois:stateid/2],[clark fork:riverid/2,usa:countryid/2],[connecticut:riverid/2,vermont:stateid/2],[ouachita:riverid/2,usa:countryid/2],[pecos:riverid/2,texas:stateid/2],[delaware:riverid/2,delaware:stateid/2],[snake:riverid/2,washington:stateid/2],[white:riverid/2,missouri:stateid/2],[clark fork:riverid/2,idaho:stateid/2],[ouachita:riverid/2,arkansas:stateid/2],[rio grande:riverid/2,texas:stateid/2],[green:riverid/2,usa:countryid/2],[canadian:riverid/2,texas:stateid/2],[south platte:riverid/2,usa:countryid/2],[cheyenne:riverid/2,north dakota:stateid/2]}:{[riverid/2,stateid/2],[riverid/2,cityid/3],[riverid/2,countryid/2]}[1] and {[dakota:riverid/2],[wabash:riverid/2],[gila:riverid/2],[connecticut:riverid/2],[clark fork:riverid/2],[allegheny:riverid/2],[south platte:riverid/2],[washita:riverid/2],[hudson:riverid/2],[snake:riverid/2],[tombigbee:riverid/2],[chattahoochee:riverid/2],[pecos:riverid/2],[ohio:riverid/2],[arkansas:riverid/2],[roanoke:riverid/2],[colorado:riverid/2],[little missouri:riverid/2],[delaware:riverid/2],[wateree catawba:riverid/2],[cimarron:riverid/2],[white:riverid/2],[powder:riverid/2],[cumberland:riverid/2],[bighorn:riverid/2],[niobrara:riverid/2],[rock:riverid/2],[columbia:riverid/2],[tennessee:riverid/2],[smoky hill:riverid/2],[rio grande:riverid/2],[mississippi:riverid/2],[pearl:riverid/2],[potomac:riverid/2],[canadian:riverid/2],[republican:riverid/2],[red:riverid/2],[neosho:riverid/2],[north platte:riverid/2],[ouachita:riverid/2],[yellowstone:riverid/2],[cheyenne:riverid/2],[green:riverid/2],[san juan:riverid/2],[missouri:riverid/2],[st. francis:riverid/2]}:{[riverid/2]}[0] => {}:error]} | answer(A,(river(A),traverse(A,B),river(B),traverse(B,C),const(C,stateid(C))))
        Example tmpgr210hsl.dlog:435: query => {[Join failed syntactically: {[irvine_ca:cityid/3,california:stateid/2],[silver spring_md:cityid/3,maryland:stateid/2],[mcallen_tx:cityid/3,texas:stateid/2],[west valley_ut:cityid/3,usa:countryid/2],[portland_me:cityid/3,maine:stateid/2],[bristol_ct:cityid/3,connecticut:stateid/2],[koolaupoko_hi:cityid/3,hawaii:stateid/2],[bayonne_nj:cityid/3,new jersey:stateid/2],[east orange_nj:cityid/3,usa:countryid/2],[st. joseph_mo:cityid/3,missouri:stateid/2],[terre haute_in:cityid/3,usa:countryid/2],[waterbury_ct:cityid/3,connecticut:stateid/2],[reading_pa:cityid/3,usa:countryid/2],[concord_ca:cityid/3,california:stateid/2],[portland_me:cityid/3,usa:countryid/2],[tyler_tx:cityid/3,texas:stateid/2],[lynchburg_va:cityid/3,virginia:stateid/2],[redford_mi:cityid/3,michigan:stateid/2],[sioux city_ia:cityid/3,iowa:stateid/2],[kendall_fl:cityid/3,usa:countryid/2],[simi valley_ca:cityid/3,california:stateid/2],[east los angeles_ca:cityid/3,usa:countryid/2],[vallejo_ca:cityid/3,usa:countryid/2],[camden_nj:cityid/3,usa:countryid/2],[norwalk_ct:cityid/3,connecticut:stateid/2],[boise_id:cityid/3,usa:countryid/2],[penn hills_pa:cityid/3,pennsylvania:stateid/2],[fort smith_ar:cityid/3,usa:countryid/2],[fall river_ma:cityid/3,massachusetts:stateid/2],[buena park_ca:cityid/3,california:stateid/2],[winston-salem_nc:cityid/3,usa:countryid/2],[newport beach_ca:cityid/3,usa:countryid/2],[taylor_mi:cityid/3,michigan:stateid/2],[framingham_ma:cityid/3,massachusetts:stateid/2],[royal oak_mi:cityid/3,michigan:stateid/2],[medford_ma:cityid/3,massachusetts:stateid/2],[alameda_ca:cityid/3,california:stateid/2],[grand prairie_tx:cityid/3,texas:stateid/2],[ontario_ca:cityid/3,usa:countryid/2],[salinas_ca:cityid/3,california:stateid/2],[fairfield_ca:cityid/3,california:stateid/2],[tallahassee_fl:cityid/3,florida:stateid/2],[elyria_oh:cityid/3,ohio:stateid/2],[beaumont_tx:cityid/3,texas:stateid/2],[appleton_wi:cityid/3,usa:countryid/2],[abilene_tx:cityid/3,usa:countryid/2],[altoona_pa:cityid/3,pennsylvania:stateid/2],[south gate_ca:cityid/3,california:stateid/2],[peoria_il:cityid/3,usa:countryid/2],[lynchburg_va:cityid/3,usa:countryid/2],[fremont_ca:cityid/3,usa:countryid/2],[west covina_ca:cityid/3,usa:countryid/2],[boulder_co:cityid/3,usa:countryid/2],[greenville_sc:cityid/3,south carolina:stateid/2],[charleston_wv:cityid/3,west virginia:stateid/2],[billings_mt:cityid/3,montana:stateid/2],[hampton_va:cityid/3,virginia:stateid/2],[lakewood_ca:cityid/3,california:stateid/2],[bridgeport_ct:cityid/3,usa:countryid/2],[longview_tx:cityid/3,texas:stateid/2],[torrance_ca:cityid/3,usa:countryid/2],[charleston_sc:cityid/3,usa:countryid/2],[upper darby_pa:cityid/3,usa:countryid/2],[kenosha_wi:cityid/3,wisconsin:stateid/2],[lansing_mi:cityid/3,usa:countryid/2],[parma_oh:cityid/3,usa:countryid/2],[fargo_nd:cityid/3,usa:countryid/2],[burbank_ca:cityid/3,usa:countryid/2],[koolaupoko_hi:cityid/3,usa:countryid/2],[kendall_fl:cityid/3,florida:stateid/2],[euclid_oh:cityid/3,usa:countryid/2],[boulder_co:cityid/3,colorado:stateid/2],[allentown_pa:cityid/3,usa:countryid/2],[topeka_ks:cityid/3,usa:countryid/2],[lower merion_pa:cityid/3,usa:countryid/2],[stockton_ca:cityid/3,usa:countryid/2],[bellevue_wa:cityid/3,washington:stateid/2],[lafayette_la:cityid/3,usa:countryid/2],[lynn_ma:cityid/3,massachusetts:stateid/2],[miami beach_fl:cityid/3,usa:countryid/2],[provo_ut:cityid/3,usa:countryid/2],[concord_ca:cityid/3,usa:countryid/2],[middletown_nj:cityid/3,new jersey:stateid/2],[bridgeport_ct:cityid/3,connecticut:stateid/2],[canton_oh:cityid/3,usa:countryid/2],[davenport_ia:cityid/3,iowa:stateid/2],[laredo_tx:cityid/3,texas:stateid/2],[kenner_la:cityid/3,usa:countryid/2],[west covina_ca:cityid/3,california:stateid/2],[lansing_mi:cityid/3,michigan:stateid/2],[new bedford_ma:cityid/3,usa:countryid/2],[springfield_oh:cityid/3,usa:countryid/2],[north little rock_ar:cityid/3,arkansas:stateid/2],[macon_ga:cityid/3,georgia:stateid/2],[troy_mi:cityid/3,usa:countryid/2],[north charleston_sc:cityid/3,south carolina:stateid/2],[erie_pa:cityid/3,pennsylvania:stateid/2],[chesapeake_va:cityid/3,usa:countryid/2],[fort collins_co:cityid/3,colorado:stateid/2],[norwalk_ct:cityid/3,usa:countryid/2],[saginaw_mi:cityid/3,usa:countryid/2],[laredo_tx:cityid/3,usa:countryid/2],[pontiac_mi:cityid/3,usa:countryid/2],[kenner_la:cityid/3,louisiana:stateid/2],[bethlehem_pa:cityid/3,usa:countryid/2],[silver spring_md:cityid/3,usa:countryid/2],[san leandro_ca:cityid/3,usa:countryid/2],[cicero_il:cityid/3,usa:countryid/2],[taylor_mi:cityid/3,usa:countryid/2],[mesquite_tx:cityid/3,usa:countryid/2],[clinton_mi:cityid/3,usa:countryid/2],[reno_nv:cityid/3,usa:countryid/2],[bloomington_mn:cityid/3,usa:countryid/2],[san mateo_ca:cityid/3,usa:countryid/2],[eugene_or:cityid/3,usa:countryid/2],[citrus heights_ca:cityid/3,usa:countryid/2],[rochester_mn:cityid/3,usa:countryid/2],[elyria_oh:cityid/3,usa:countryid/2],[cranston_ri:cityid/3,usa:countryid/2],[glendale_az:cityid/3,arizona:stateid/2],[bayonne_nj:cityid/3,usa:countryid/2],[cedar rapids_ia:cityid/3,usa:countryid/2],[abilene_tx:cityid/3,texas:stateid/2],[south gate_ca:cityid/3,usa:countryid/2],[edison_nj:cityid/3,new jersey:stateid/2],[gainesville_fl:cityid/3,usa:countryid/2],[champaign_il:cityid/3,usa:countryid/2],[hammond_in:cityid/3,usa:countryid/2],[largo_fl:cityid/3,usa:countryid/2],[st. joseph_mo:cityid/3,usa:countryid/2],[casper_wy:cityid/3,wyoming:stateid/2],[west hartford_ct:cityid/3,usa:countryid/2],[duluth_mn:cityid/3,minnesota:stateid/2],[richardson_tx:cityid/3,texas:stateid/2],[waco_tx:cityid/3,usa:countryid/2],[meriden_ct:cityid/3,usa:countryid/2],[richardson_tx:cityid/3,usa:countryid/2],[fayetteville_nc:cityid/3,north carolina:stateid/2],[escondido_ca:cityid/3,usa:countryid/2],[compton_ca:cityid/3,california:stateid/2],[arvada_co:cityid/3,usa:countryid/2],[schenectady_ny:cityid/3,new york:stateid/2],[garden grove_ca:cityid/3,usa:countryid/2],[torrance_ca:cityid/3,california:stateid/2],[casper_wy:cityid/3,usa:countryid/2],[ogden_ut:cityid/3,utah:stateid/2],[lakewood_oh:cityid/3,usa:countryid/2],[davenport_ia:cityid/3,usa:countryid/2],[new britain_ct:cityid/3,connecticut:stateid/2],[abingdon_pa:cityid/3,pennsylvania:stateid/2],[cicero_il:cityid/3,illinois:stateid/2],[new britain_ct:cityid/3,usa:countryid/2],[decatur_il:cityid/3,usa:countryid/2],[st. clair shores_mi:cityid/3,usa:countryid/2],[durham_nc:cityid/3,usa:countryid/2],[saginaw_mi:cityid/3,michigan:stateid/2],[green bay_wi:cityid/3,usa:countryid/2],[gainesville_fl:cityid/3,florida:stateid/2],[youngstown_oh:cityid/3,ohio:stateid/2],[fullerton_ca:cityid/3,usa:countryid/2],[new haven_ct:cityid/3,connecticut:stateid/2],[oceanside_ca:cityid/3,usa:countryid/2],[irvington_nj:cityid/3,usa:countryid/2],[berkeley_ca:cityid/3,usa:countryid/2],[racine_wi:cityid/3,usa:countryid/2],[niagara falls_ny:cityid/3,new york:stateid/2],[mesquite_tx:cityid/3,texas:stateid/2],[rockford_il:cityid/3,usa:countryid/2],[nashua_nh:cityid/3,new hampshire:stateid/2],[daly city_ca:cityid/3,california:stateid/2],[miami beach_fl:cityid/3,florida:stateid/2],[santa monica_ca:cityid/3,california:stateid/2],[costa mesa_ca:cityid/3,california:stateid/2],[dearborn_mi:cityid/3,usa:countryid/2],[lowell_ma:cityid/3,massachusetts:stateid/2],[tyler_tx:cityid/3,usa:countryid/2],[chesapeake_va:cityid/3,virginia:stateid/2],[fairfield_ca:cityid/3,usa:countryid/2],[cheektowaga_ny:cityid/3,new york:stateid/2],[north little rock_ar:cityid/3,usa:countryid/2],[port arthur_tx:cityid/3,usa:countryid/2],[lakewood_ca:cityid/3,usa:countryid/2],[waterford_mi:cityid/3,michigan:stateid/2],[cedar rapids_ia:cityid/3,iowa:stateid/2],[lorain_oh:cityid/3,usa:countryid/2],[farmington hills_mi:cityid/3,usa:countryid/2],[east orange_nj:cityid/3,new jersey:stateid/2],[portsmouth_va:cityid/3,usa:countryid/2],[trenton_nj:cityid/3,usa:countryid/2],[greenwich_ct:cityid/3,usa:countryid/2],[santa barbara_ca:cityid/3,usa:countryid/2],[paterson_nj:cityid/3,usa:countryid/2],[escondido_ca:cityid/3,california:stateid/2],[berkeley_ca:cityid/3,california:stateid/2],[columbia_sc:cityid/3,south carolina:stateid/2],[new bedford_ma:cityid/3,massachusetts:stateid/2],[great falls_mt:cityid/3,usa:countryid/2],[meriden_ct:cityid/3,connecticut:stateid/2],[waco_tx:cityid/3,texas:stateid/2],[pomona_ca:cityid/3,california:stateid/2],[simi valley_ca:cityid/3,usa:countryid/2],[modesto_ca:cityid/3,california:stateid/2],[euclid_oh:cityid/3,ohio:stateid/2],[stamford_ct:cityid/3,connecticut:stateid/2],[macon_ga:cityid/3,usa:countryid/2],[altoona_pa:cityid/3,usa:countryid/2],[overland park_ks:cityid/3,usa:countryid/2],[grand prairie_tx:cityid/3,usa:countryid/2],[high point_nc:cityid/3,usa:countryid/2],[oak lawn_il:cityid/3,illinois:stateid/2],[chula vista_ca:cityid/3,usa:countryid/2],[clearwater_fl:cityid/3,florida:stateid/2],[lawton_ok:cityid/3,oklahoma:stateid/2],[oxnard_ca:cityid/3,usa:countryid/2],[royal oak_mi:cityid/3,usa:countryid/2],[fargo_nd:cityid/3,north dakota:stateid/2],[evansville_in:cityid/3,indiana:stateid/2],[niagara falls_ny:cityid/3,usa:countryid/2],[sunnyvale_ca:cityid/3,california:stateid/2],[scranton_pa:cityid/3,pennsylvania:stateid/2],[waukegan_il:cityid/3,usa:countryid/2],[charleston_wv:cityid/3,usa:countryid/2],[levittown_ny:cityid/3,usa:countryid/2],[evanston_il:cityid/3,illinois:stateid/2],[danbury_ct:cityid/3,usa:countryid/2],[waltham_ma:cityid/3,usa:countryid/2],[billings_mt:cityid/3,usa:countryid/2],[cherry hill_nj:cityid/3,usa:countryid/2],[somerville_ma:cityid/3,usa:countryid/2],[clinton_mi:cityid/3,michigan:stateid/2],[danbury_ct:cityid/3,connecticut:stateid/2],[carson_ca:cityid/3,usa:countryid/2],[mcallen_tx:cityid/3,usa:countryid/2],[hammond_in:cityid/3,indiana:stateid/2],[tuscaloosa_al:cityid/3,usa:countryid/2],[costa mesa_ca:cityid/3,usa:countryid/2],[wichita falls_tx:cityid/3,texas:stateid/2],[quincy_ma:cityid/3,usa:countryid/2],[reno_nv:cityid/3,nevada:stateid/2],[paterson_nj:cityid/3,new jersey:stateid/2],[warwick_ri:cityid/3,rhode island:stateid/2],[wichita falls_tx:cityid/3,usa:countryid/2],[dearborn heights_mi:cityid/3,michigan:stateid/2],[huntsville_al:cityid/3,alabama:stateid/2],[anderson_in:cityid/3,usa:countryid/2],[nashua_nh:cityid/3,usa:countryid/2],[canton_oh:cityid/3,ohio:stateid/2],[glendale_az:cityid/3,usa:countryid/2],[kalamazoo_mi:cityid/3,usa:countryid/2],[fort smith_ar:cityid/3,arkansas:stateid/2],[kettering_oh:cityid/3,usa:countryid/2],[woodbridge_nj:cityid/3,new jersey:stateid/2],[muncie_in:cityid/3,indiana:stateid/2],[green bay_wi:cityid/3,wisconsin:stateid/2],[el cajon_ca:cityid/3,usa:countryid/2],[independence_mo:cityid/3,missouri:stateid/2],[cambridge_ma:cityid/3,usa:countryid/2],[norman_ok:cityid/3,usa:countryid/2],[santa rosa_ca:cityid/3,usa:countryid/2],[newton_ma:cityid/3,usa:countryid/2],[fremont_ca:cityid/3,california:stateid/2],[mount vernon_ny:cityid/3,new york:stateid/2],[ogden_ut:cityid/3,usa:countryid/2],[cherry hill_nj:cityid/3,new jersey:stateid/2],[utica_ny:cityid/3,usa:countryid/2],[inglewood_ca:cityid/3,california:stateid/2],[wilmington_de:cityid/3,usa:countryid/2],[rochester_mn:cityid/3,minnesota:stateid/2],[arlington heights_il:cityid/3,illinois:stateid/2],[bristol_ct:cityid/3,usa:countryid/2],[tuscaloosa_al:cityid/3,alabama:stateid/2],[huntington_wv:cityid/3,west virginia:stateid/2],[garland_tx:cityid/3,texas:stateid/2],[carson_ca:cityid/3,california:stateid/2],[ann arbor_mi:cityid/3,usa:countryid/2],[port arthur_tx:cityid/3,texas:stateid/2],[orange_ca:cityid/3,california:stateid/2],[quincy_ma:cityid/3,massachusetts:stateid/2],[youngstown_oh:cityid/3,usa:countryid/2],[wyoming_mi:cityid/3,usa:countryid/2],[new haven_ct:cityid/3,usa:countryid/2],[thousand oaks_ca:cityid/3,california:stateid/2],[kalamazoo_mi:cityid/3,michigan:stateid/2],[arlington heights_il:cityid/3,usa:countryid/2],[chula vista_ca:cityid/3,california:stateid/2],[charleston_sc:cityid/3,south carolina:stateid/2],[pueblo_co:cityid/3,usa:countryid/2],[alexandria_va:cityid/3,virginia:stateid/2],[clifton_nj:cityid/3,new jersey:stateid/2],[scotts valley_ca:cityid/3,california:stateid/2],[waukegan_il:cityid/3,illinois:stateid/2],[albany_ga:cityid/3,georgia:stateid/2],[woodbridge_nj:cityid/3,usa:countryid/2],[hayward_ca:cityid/3,california:stateid/2],[dubuque_ia:cityid/3,usa:countryid/2],[farmington hills_mi:cityid/3,michigan:stateid/2],[somerville_ma:cityid/3,massachusetts:stateid/2],[daly city_ca:cityid/3,usa:countryid/2],[pensacola_fl:cityid/3,florida:stateid/2],[kenosha_wi:cityid/3,usa:countryid/2],[thousand oaks_ca:cityid/3,usa:countryid/2],[brockton_ma:cityid/3,usa:countryid/2],[camden_nj:cityid/3,new jersey:stateid/2],[savannah_ga:cityid/3,usa:countryid/2],[monroe_la:cityid/3,usa:countryid/2],[norman_ok:cityid/3,oklahoma:stateid/2],[alhambra_ca:cityid/3,california:stateid/2],[glendale_ca:cityid/3,usa:countryid/2],[buena park_ca:cityid/3,usa:countryid/2],[topeka_ks:cityid/3,kansas:stateid/2],[brockton_ma:cityid/3,massachusetts:stateid/2],[lake charles_la:cityid/3,louisiana:stateid/2],[sioux city_ia:cityid/3,usa:countryid/2],[newport news_va:cityid/3,virginia:stateid/2],[greenwich_ct:cityid/3,connecticut:stateid/2],[hollywood_fl:cityid/3,usa:countryid/2],[springfield_il:cityid/3,usa:countryid/2],[lawton_ok:cityid/3,usa:countryid/2],[southfield_mi:cityid/3,usa:countryid/2],[alhambra_ca:cityid/3,usa:countryid/2],[raleigh_nc:cityid/3,north carolina:stateid/2],[waterloo_ia:cityid/3,iowa:stateid/2],[citrus heights_ca:cityid/3,california:stateid/2],[lynn_ma:cityid/3,usa:countryid/2],[hayward_ca:cityid/3,usa:countryid/2],[el monte_ca:cityid/3,california:stateid/2],[stamford_ct:cityid/3,usa:countryid/2],[irondequoit_ny:cityid/3,new york:stateid/2],[beaumont_tx:cityid/3,usa:countryid/2],[peoria_il:cityid/3,illinois:stateid/2],[sioux falls_sd:cityid/3,south dakota:stateid/2],[new rochelle_ny:cityid/3,usa:countryid/2],[provo_ut:cityid/3,utah:stateid/2],[san leandro_ca:cityid/3,california:stateid/2],[bellevue_wa:cityid/3,usa:countryid/2],[burbank_ca:cityid/3,california:stateid/2],[high point_nc:cityid/3,north carolina:stateid/2],[raleigh_nc:cityid/3,usa:countryid/2],[ventura_ca:cityid/3,california:stateid/2],[compton_ca:cityid/3,usa:countryid/2],[albany_ga:cityid/3,usa:countryid/2],[bristol township_pa:cityid/3,usa:countryid/2],[muncie_in:cityid/3,usa:countryid/2],[middletown_nj:cityid/3,usa:countryid/2],[west allis_wi:cityid/3,wisconsin:stateid/2],[fayetteville_nc:cityid/3,usa:countryid/2],[modesto_ca:cityid/3,usa:countryid/2],[pasadena_ca:cityid/3,california:stateid/2],[vallejo_ca:cityid/3,california:stateid/2],[portsmouth_va:cityid/3,virginia:stateid/2],[eugene_or:cityid/3,oregon:stateid/2],[plano_tx:cityid/3,texas:stateid/2],[norwalk_ca:cityid/3,usa:countryid/2],[hamilton_oh:cityid/3,usa:countryid/2],[springfield_mo:cityid/3,usa:countryid/2],[independence_mo:cityid/3,usa:countryid/2],[salem_or:cityid/3,oregon:stateid/2],[skokie_il:cityid/3,illinois:stateid/2],[downey_ca:cityid/3,california:stateid/2],[sterling heights_mi:cityid/3,michigan:stateid/2],[champaign_il:cityid/3,illinois:stateid/2],[salem_or:cityid/3,usa:countryid/2],[west valley_ut:cityid/3,utah:stateid/2],[lakewood_co:cityid/3,colorado:stateid/2],[irondequoit_ny:cityid/3,usa:countryid/2],[mountain view_ca:cityid/3,california:stateid/2],[greenville_sc:cityid/3,usa:countryid/2],[ventura_ca:cityid/3,usa:countryid/2],[lawrence_ma:cityid/3,usa:countryid/2],[westminster_ca:cityid/3,usa:countryid/2],[livonia_mi:cityid/3,usa:countryid/2],[winston-salem_nc:cityid/3,north carolina:stateid/2],[richmond_ca:cityid/3,california:stateid/2],[tempe_az:cityid/3,arizona:stateid/2],[irvine_ca:cityid/3,usa:countryid/2],[parma_oh:cityid/3,ohio:stateid/2],[west allis_wi:cityid/3,usa:countryid/2],[tempe_az:cityid/3,usa:countryid/2],[hampton_va:cityid/3,usa:countryid/2],[southfield_mi:cityid/3,michigan:stateid/2],[bristol township_pa:cityid/3,pennsylvania:stateid/2],[stockton_ca:cityid/3,california:stateid/2],[troy_mi:cityid/3,michigan:stateid/2],[joliet_il:cityid/3,illinois:stateid/2],[lowell_ma:cityid/3,usa:countryid/2],[lawrence_ma:cityid/3,massachusetts:stateid/2],[springfield_oh:cityid/3,ohio:stateid/2],[erie_pa:cityid/3,usa:countryid/2],[great falls_mt:cityid/3,montana:stateid/2],[levittown_ny:cityid/3,new york:stateid/2],[anderson_in:cityid/3,indiana:stateid/2],[overland park_ks:cityid/3,kansas:stateid/2],[san bernardino_ca:cityid/3,california:stateid/2],[kettering_oh:cityid/3,ohio:stateid/2],[pontiac_mi:cityid/3,michigan:stateid/2],[south bend_in:cityid/3,usa:countryid/2],[mount vernon_ny:cityid/3,usa:countryid/2],[san mateo_ca:cityid/3,california:stateid/2],[newton_ma:cityid/3,massachusetts:stateid/2],[hamilton_oh:cityid/3,ohio:stateid/2],[cranston_ri:cityid/3,rhode island:stateid/2],[manchester_nh:cityid/3,usa:countryid/2],[santa monica_ca:cityid/3,usa:countryid/2],[pasadena_tx:cityid/3,usa:countryid/2],[dearborn_mi:cityid/3,michigan:stateid/2],[arvada_co:cityid/3,colorado:stateid/2],[framingham_ma:cityid/3,usa:countryid/2],[bethesda_md:cityid/3,usa:countryid/2],[san angelo_tx:cityid/3,texas:stateid/2],[glendale_ca:cityid/3,california:stateid/2],[alexandria_va:cityid/3,usa:countryid/2],[oak lawn_il:cityid/3,usa:countryid/2],[racine_wi:cityid/3,wisconsin:stateid/2],[evanston_il:cityid/3,usa:countryid/2],[dubuque_ia:cityid/3,iowa:stateid/2],[huntington_wv:cityid/3,usa:countryid/2],[plano_tx:cityid/3,usa:countryid/2],[pueblo_co:cityid/3,colorado:stateid/2],[scranton_pa:cityid/3,usa:countryid/2],[albany_ny:cityid/3,usa:countryid/2],[west palm beach_fl:cityid/3,usa:countryid/2],[evansville_in:cityid/3,usa:countryid/2],[duluth_mn:cityid/3,usa:countryid/2],[newport news_va:cityid/3,usa:countryid/2],[st. clair shores_mi:cityid/3,michigan:stateid/2],[huntsville_al:cityid/3,usa:countryid/2],[aurora_il:cityid/3,illinois:stateid/2],[scottsdale_az:cityid/3,arizona:stateid/2],[trenton_nj:cityid/3,new jersey:stateid/2],[amarillo_tx:cityid/3,usa:countryid/2],[norwalk_ca:cityid/3,california:stateid/2],[waterbury_ct:cityid/3,usa:countryid/2],[east los angeles_ca:cityid/3,california:stateid/2],[san angelo_tx:cityid/3,usa:countryid/2],[santa barbara_ca:cityid/3,california:stateid/2],[durham_nc:cityid/3,north carolina:stateid/2],[westland_mi:cityid/3,usa:countryid/2],[clifton_nj:cityid/3,usa:countryid/2],[terre haute_in:cityid/3,indiana:stateid/2],[tallahassee_fl:cityid/3,usa:countryid/2],[downey_ca:cityid/3,usa:countryid/2],[savannah_ga:cityid/3,georgia:stateid/2],[pawtucket_ri:cityid/3,rhode island:stateid/2],[inglewood_ca:cityid/3,usa:countryid/2],[wilmington_de:cityid/3,delaware:stateid/2],[redondo beach_ca:cityid/3,usa:countryid/2],[allentown_pa:cityid/3,pennsylvania:stateid/2],[odessa_tx:cityid/3,usa:countryid/2],[decatur_il:cityid/3,illinois:stateid/2],[wyoming_mi:cityid/3,michigan:stateid/2],[columbia_mo:cityid/3,usa:countryid/2],[livonia_mi:cityid/3,michigan:stateid/2],[ann arbor_mi:cityid/3,michigan:stateid/2],[warwick_ri:cityid/3,usa:countryid/2],[el monte_ca:cityid/3,usa:countryid/2],[elizabeth_nj:cityid/3,usa:countryid/2],[rockford_il:cityid/3,illinois:stateid/2],[el cajon_ca:cityid/3,california:stateid/2],[dearborn heights_mi:cityid/3,usa:countryid/2],[lower merion_pa:cityid/3,pennsylvania:stateid/2],[columbia_mo:cityid/3,missouri:stateid/2],[reading_pa:cityid/3,pennsylvania:stateid/2],[waterford_mi:cityid/3,usa:countryid/2],[waterloo_ia:cityid/3,usa:countryid/2],[orlando_fl:cityid/3,usa:countryid/2],[west palm beach_fl:cityid/3,florida:stateid/2],[cambridge_ma:cityid/3,massachusetts:stateid/2],[hartford_ct:cityid/3,usa:countryid/2],[largo_fl:cityid/3,florida:stateid/2],[roanoke_va:cityid/3,virginia:stateid/2],[garden grove_ca:cityid/3,california:stateid/2],[boise_id:cityid/3,idaho:stateid/2],[bloomington_mn:cityid/3,minnesota:stateid/2],[scotts valley_ca:cityid/3,usa:countryid/2],[abingdon_pa:cityid/3,usa:countryid/2],[medford_ma:cityid/3,usa:countryid/2],[dundalk_md:cityid/3,maryland:stateid/2],[utica_ny:cityid/3,new york:stateid/2],[albany_ny:cityid/3,new york:stateid/2],[elgin_il:cityid/3,usa:countryid/2],[amarillo_tx:cityid/3,texas:stateid/2],[elgin_il:cityid/3,illinois:stateid/2],[hartford_ct:cityid/3,connecticut:stateid/2],[skokie_il:cityid/3,usa:countryid/2],[joliet_il:cityid/3,usa:countryid/2],[springfield_il:cityid/3,illinois:stateid/2],[san bernardino_ca:cityid/3,usa:countryid/2],[hollywood_fl:cityid/3,florida:stateid/2],[bethlehem_pa:cityid/3,pennsylvania:stateid/2],[brownsville_tx:cityid/3,usa:countryid/2],[new rochelle_ny:cityid/3,new york:stateid/2],[lakewood_co:cityid/3,usa:countryid/2],[newport beach_ca:cityid/3,california:stateid/2],[santa rosa_ca:cityid/3,california:stateid/2],[bakersfield_ca:cityid/3,usa:countryid/2],[brownsville_tx:cityid/3,texas:stateid/2],[fort collins_co:cityid/3,usa:countryid/2],[richmond_ca:cityid/3,usa:countryid/2],[penn hills_pa:cityid/3,usa:countryid/2],[roanoke_va:cityid/3,usa:countryid/2],[oxnard_ca:cityid/3,california:stateid/2],[oceanside_ca:cityid/3,california:stateid/2],[pasadena_tx:cityid/3,texas:stateid/2],[south bend_in:cityid/3,indiana:stateid/2],[westland_mi:cityid/3,michigan:stateid/2],[aurora_il:cityid/3,usa:countryid/2],[irving_tx:cityid/3,usa:countryid/2],[schenectady_ny:cityid/3,usa:countryid/2],[elizabeth_nj:cityid/3,new jersey:stateid/2],[longview_tx:cityid/3,usa:countryid/2],[cheektowaga_ny:cityid/3,usa:countryid/2],[pawtucket_ri:cityid/3,usa:countryid/2],[redford_mi:cityid/3,usa:countryid/2],[monroe_la:cityid/3,louisiana:stateid/2],[lafayette_la:cityid/3,louisiana:stateid/2],[west hartford_ct:cityid/3,connecticut:stateid/2],[sunnyvale_ca:cityid/3,usa:countryid/2],[santa clara_ca:cityid/3,california:stateid/2],[sterling heights_mi:cityid/3,usa:countryid/2],[appleton_wi:cityid/3,wisconsin:stateid/2],[fullerton_ca:cityid/3,california:stateid/2],[lakewood_oh:cityid/3,ohio:stateid/2],[dundalk_md:cityid/3,usa:countryid/2],[redondo beach_ca:cityid/3,california:stateid/2],[santa clara_ca:cityid/3,usa:countryid/2],[lorain_oh:cityid/3,ohio:stateid/2],[mountain view_ca:cityid/3,usa:countryid/2],[midland_tx:cityid/3,usa:countryid/2],[pensacola_fl:cityid/3,usa:countryid/2],[salinas_ca:cityid/3,usa:countryid/2],[upper darby_pa:cityid/3,pennsylvania:stateid/2],[waltham_ma:cityid/3,massachusetts:stateid/2],[edison_nj:cityid/3,usa:countryid/2],[irvington_nj:cityid/3,new jersey:stateid/2],[lake charles_la:cityid/3,usa:countryid/2],[bethesda_md:cityid/3,maryland:stateid/2],[irving_tx:cityid/3,texas:stateid/2],[midland_tx:cityid/3,texas:stateid/2],[scottsdale_az:cityid/3,usa:countryid/2],[fall river_ma:cityid/3,usa:countryid/2],[north charleston_sc:cityid/3,usa:countryid/2],[bakersfield_ca:cityid/3,california:stateid/2],[columbia_sc:cityid/3,usa:countryid/2],[whittier_ca:cityid/3,usa:countryid/2],[orange_ca:cityid/3,usa:countryid/2],[odessa_tx:cityid/3,texas:stateid/2],[ontario_ca:cityid/3,california:stateid/2],[whittier_ca:cityid/3,california:stateid/2],[garland_tx:cityid/3,usa:countryid/2],[alameda_ca:cityid/3,usa:countryid/2],[manchester_nh:cityid/3,new hampshire:stateid/2],[pomona_ca:cityid/3,usa:countryid/2],[pasadena_ca:cityid/3,usa:countryid/2],[springfield_mo:cityid/3,missouri:stateid/2],[westminster_ca:cityid/3,california:stateid/2],[clearwater_fl:cityid/3,usa:countryid/2],[orlando_fl:cityid/3,florida:stateid/2],[sioux falls_sd:cityid/3,usa:countryid/2]}:{[cityid/3,stateid/2],[cityid/3,countryid/2]}[1] and {..}:{[date,stateid/2],[date_day,stateid/2],[time_duration,stateid/2],[count,stateid/2],[date_year,stateid/2],[rank,stateid/2],[date_month,stateid/2],[money/time_duration,stateid/2],[length,stateid/2],[frac,stateid/2],[date_time,stateid/2],[length^2,stateid/2],[name,stateid/2],[count/length^2,stateid/2],[money,stateid/2]}[0] => {}:error]} | answer(A,(major(A),city(A),city(A),loc(A,B),const(B,stateid(B))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:438: query => {[3901length]} | answer(A,(elevation(B,A),highest(B,(place(B),loc(B,C),const(C,stateid(montana))))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:439: query => {[1.81e+11length^2],[1.06e+11length^2],[1.38e+11length^2],[1.76e+11length^2],[2.20e+11length^2],[1.07e+11length^2],[2.85e+09length^2],[2.00e+11length^2],[2.15e+10length^2],[9.38e+10length^2],[1.53e+12length^2],[2.51e+11length^2],[2.71e+10length^2],[5.29e+09length^2],[8.06e+10length^2],[2.02e+10length^2],[1.34e+11length^2],[1.68e+10length^2],[2.15e+11length^2],[1.78e+11length^2],[2.49e+10length^2],[1.83e+11length^2],[1.24e+11length^2],[1.17e+11length^2],[6.91e+11length^2],[6.27e+10length^2],[1.53e+11length^2],[1.46e+11length^2],[2.95e+11length^2],[3.81e+11length^2],[1.52e+11length^2],[3.15e+11length^2],[2.40e+10length^2],[1.09e+11length^2],[2.19e+11length^2],[1.30e+10length^2],[1.45e+11length^2],[3.14e+09length^2],[2.53e+11length^2],[8.62e+10length^2],[2.86e+11length^2],[2.13e+11length^2],[1.27e+11length^2],[4.09e+11length^2],[1.36e+11length^2],[2.69e+11length^2]} | answer(A,(area(B,A),state(B)))
        Example tmpgr210hsl.dlog:440: query => {} | answer(A,(major(A),city(A),loc(A,B),const(B,stateid(major))))
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:442: query => {[usa:countryid/2],[texas:stateid/2]} | answer(A,(loc(B,A),const(B,cityid(houston,_))))
        Example FAILED TO EXECUTE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:444: query => {[nevada:stateid/2],[utah:stateid/2],[colorado:stateid/2],[new mexico:stateid/2],[california:stateid/2]} | answer(A,(state(A),next_to(A,B),const(B,stateid(arizona))))
        Example tmpgr210hsl.dlog:445: query => {[ouachita river:placeid/2]} | answer(A,lowest(A,(place(A),loc(A,B),const(B,stateid(arkansas)))))
        Example FAILED TO EXECUTE
        Example tmpgr210hsl.dlog:447: query => {[2520000count]} | answer(A,(population(B,A),const(B,stateid(mississippi))))
        Example FAILED TO PARSE
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:448: query => {[1.45e+11length^2]} | answer(A,(area(B,A),const(B,stateid(wisconsin))))
        Example FAILED TO PARSE
        Example tmpgr210hsl.dlog:449: query => {[638000count]} | answer(A,smallest(B,(state(B),population(B,A))))
        Example FAILED TO PARSE
      } [5.4s, cum. 12s]
    } [12s, cum. 12s]
    Randomly splitting 394 general examples
    276 training examples, 118 test examples
  } [12s, cum. 13s]
  Execution directory: /Users/Megan/Desktop/NLP/p2-distrib/state/execs/113.exec
} [13s]
